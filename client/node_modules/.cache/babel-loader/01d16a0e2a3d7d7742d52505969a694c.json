{"ast":null,"code":"import _objectSpread from \"/Users/luise.arevalo/Desktop/React/pvp-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/luise.arevalo/Desktop/React/pvp-app/src/UI/Table/Table.js\";\nimport React from \"react\";\nimport classes from \"./Table.module.css\";\n\nvar table = function table(props) {\n  console.log(\"the moves are\", props.quickMoves);\n  console.log(\"selected pokemon \", props.selectedPokemon);\n  var quickMoves = [];\n  var chargeMoves = [];\n\n  var copy = _objectSpread({}, props.selectedPokemon[0]);\n\n  console.log(\"copy\", copy); // let filertedData = {};\n\n  for (var key in copy) {\n    console.log(key);\n\n    if (key === \"quick move 1\" || key === \"quick move 2\" || key === \"quick move 3\" || key === \"quick move 4\" || key === \"quick move 5\") {\n      quickMoves.push({\n        key: copy[key]\n      });\n    }\n  }\n\n  console.log(\"THE MOVES ARE\", quickMoves); // }\n  // console.log(filertedData);\n  // const filteredData = Object.keys(copy)\n  //   .filter(element => copy[element] !== null)\n  //   .reduce((accumulator, currentValue) => {\n  //     accumulator[currentValue] = copy[currentValue];\n  //     return accumulator;\n  //   }, {});\n  // console.log(\"data is\", filteredData);\n  // element.filter(ele => {\n  //   console.log(ele);\n  // });\n  // return keys.filter(key => {\n  //   console.log(element[key]);\n  //   return element[key] !== null;\n  // });\n  // console.log(\"data is\", filetedData);\n  // const keys = Object.keys(props.selectedPokemon[0]);\n  // props.selectedPokemon.map(element => {\n  //   console.log(element);\n  // });\n  // console.log(keys);\n  // for (keys in props.selectedPokemon[0]) {\n  //   console.log(props.selectedPokemon[0][keys]);\n  //   console.log(keys);\n  // }\n  // console.log(\"inside props table\", props.moveStats);\n  // console.log(props.moves);\n  // console.log(\"the data is data\", props.moves);\n\n  var moves = [];\n  var data = [];\n  var basePower = [];\n  var duration = [];\n  var energyDelta = [];\n  var moveCooldown = []; // for (let key in props.moveStats) {\n  //   console.log(key);\n  // }\n  // for (let key in props.moves) {\n  //   const moveKeys = Object.keys(props.moveStats);\n  //   moveKeys.map(keys => {\n  //     if (keys === key) {\n  //       moves.push({ id: key, quickMoveStats: props.moveStats[key] });\n  //     }\n  //   });\n  //   data.push(key);\n  // }\n  // console.log(\"the data is \", moves);\n  // fining the largest\n  // let largest = Math.max(\n  //   ...moves.map(element => element.quickMoveStats.basePower)\n  // );\n  // basePower = moves.map(element => {\n  //   console.log(largest);\n  //   // const largest = Math.max(element.quickMoveStats.basePower);\n  //   if (largest === element.quickMoveStats.basePower) {\n  //     return (\n  //       <td key={Math.random()} className={classes.Largest}>\n  //         {element.quickMoveStats.basePower}\n  //       </td>\n  //     );\n  //   } else {\n  //     return <td key={Math.random()}>{element.quickMoveStats.basePower}</td>;\n  //   }\n  // });\n\n  quickquickMoves.map(function (element) {\n    return React.createElement(\"td\", {\n      key: element.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, element.key);\n    console.log(\"element is\", element);\n  });\n  basePower = moves.map(function (el) {\n    console.log(\"printing el now\", el.quickMoveStats);\n    return React.createElement(\"td\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, el.quickMoveStats.basePower);\n  });\n  duration = moves.map(function (el) {\n    console.log(\"printing el now\", el.quickMoveStats);\n    return React.createElement(\"td\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, el.quickMoveStats.duration);\n  });\n  energyDelta = moves.map(function (el) {\n    return React.createElement(\"td\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" \", el.quickMoveStats.energyDelta);\n  });\n  moveCooldown = moves.map(function (el) {\n    return React.createElement(\"td\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, el.quickMoveStats.moveCooldown);\n  });\n  return React.createElement(\"div\", {\n    className: classes.Table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    key: Math.random(),\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Stats\"), data.map(function (el, index) {\n    return React.createElement(\"th\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, el, \" \");\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Base Power\"), basePower), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Duration\"), duration), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Energy Delta\"), energyDelta), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Move Cooldown\"), moveCooldown))));\n};\n\nexport default table;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/pvp-app/src/UI/Table/Table.js"],"names":["React","classes","table","props","console","log","quickMoves","selectedPokemon","chargeMoves","copy","key","push","moves","data","basePower","duration","energyDelta","moveCooldown","quickquickMoves","map","element","el","quickMoveStats","Math","random","Table","textAlign","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAAK,CAACG,UAAnC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,KAAK,CAACI,eAAvC;AACA,MAAMD,UAAU,GAAG,EAAnB;AACA,MAAME,WAAW,GAAG,EAApB;;AACA,MAAMC,IAAI,qBAAQN,KAAK,CAACI,eAAN,CAAsB,CAAtB,CAAR,CAAV;;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBI,IAApB,EANqB,CAOrB;;AACA,OAAK,IAAIC,GAAT,IAAgBD,IAAhB,EAAsB;AACpBL,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;;AACA,QACEA,GAAG,KAAK,cAAR,IACAA,GAAG,KAAK,cADR,IAEAA,GAAG,KAAK,cAFR,IAGAA,GAAG,KAAK,cAHR,IAIAA,GAAG,KAAK,cALV,EAME;AACAJ,MAAAA,UAAU,CAACK,IAAX,CAAgB;AAAED,QAAAA,GAAG,EAAED,IAAI,CAACC,GAAD;AAAX,OAAhB;AACD;AACF;;AACDN,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,UAA7B,EApBqB,CAsBrB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIM,KAAK,GAAG,EAAZ;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,YAAY,GAAG,EAAnB,CA5DqB,CA8DrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,EAAAA,eAAe,CAACC,GAAhB,CAAoB,UAAAC,OAAO,EAAI;AAC7B,WAAO;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACV,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBU,OAAO,CAACV,GAA/B,CAAP;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Be,OAA1B;AACD,GAHD;AAKAN,EAAAA,SAAS,GAAGF,KAAK,CAACO,GAAN,CAAU,UAAAE,EAAE,EAAI;AAC1BjB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BgB,EAAE,CAACC,cAAlC;AACA,WAAO;AAAI,MAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBH,EAAE,CAACC,cAAH,CAAkBR,SAA3C,CAAP;AACD,GAHW,CAAZ;AAKAC,EAAAA,QAAQ,GAAGH,KAAK,CAACO,GAAN,CAAU,UAAAE,EAAE,EAAI;AACzBjB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BgB,EAAE,CAACC,cAAlC;AACA,WAAO;AAAI,MAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBH,EAAE,CAACC,cAAH,CAAkBP,QAA3C,CAAP;AACD,GAHU,CAAX;AAKAC,EAAAA,WAAW,GAAGJ,KAAK,CAACO,GAAN,CAAU,UAAAE,EAAE;AAAA,WACxB;AAAI,MAAA,GAAG,EAAEE,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA0BH,EAAE,CAACC,cAAH,CAAkBN,WAA5C,CADwB;AAAA,GAAZ,CAAd;AAGAC,EAAAA,YAAY,GAAGL,KAAK,CAACO,GAAN,CAAU,UAAAE,EAAE;AAAA,WACzB;AAAI,MAAA,GAAG,EAAEE,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBH,EAAE,CAACC,cAAH,CAAkBL,YAA3C,CADyB;AAAA,GAAZ,CAAf;AAIA,SACE;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAACwB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAEF,IAAI,CAACC,MAAL,EAAT;AAAwB,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE;AAAb,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIGb,IAAI,CAACM,GAAL,CAAS,UAACE,EAAD,EAAKM,KAAL,EAAe;AACvB,WAAO;AAAI,MAAA,GAAG,EAAEJ,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBH,EAAzB,MAAP;AACD,GAFA,CAJH,CADF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAEE,IAAI,CAACC,MAAL,EAAT;AAAwB,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE;AAAb,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIGZ,SAJH,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAES,IAAI,CAACC,MAAL,EAAT;AAAwB,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE;AAAb,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGX,QAJH,CAPF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAEQ,IAAI,CAACC,MAAL,EAAT;AAAwB,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE;AAAb,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIGV,WAJH,CAbF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAEO,IAAI,CAACC,MAAL,EAAT;AAAwB,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE;AAAb,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAIGT,YAJH,CAnBF,CAXF,CADF,CADF;AA0CD,CA/JD;;AAiKA,eAAef,KAAf","sourcesContent":["import React from \"react\";\nimport classes from \"./Table.module.css\";\n\nconst table = props => {\n  console.log(\"the moves are\", props.quickMoves);\n  console.log(\"selected pokemon \", props.selectedPokemon);\n  const quickMoves = [];\n  const chargeMoves = [];\n  const copy = { ...props.selectedPokemon[0] };\n  console.log(\"copy\", copy);\n  // let filertedData = {};\n  for (let key in copy) {\n    console.log(key);\n    if (\n      key === \"quick move 1\" ||\n      key === \"quick move 2\" ||\n      key === \"quick move 3\" ||\n      key === \"quick move 4\" ||\n      key === \"quick move 5\"\n    ) {\n      quickMoves.push({ key: copy[key] });\n    }\n  }\n  console.log(\"THE MOVES ARE\", quickMoves);\n\n  // }\n  // console.log(filertedData);\n\n  // const filteredData = Object.keys(copy)\n  //   .filter(element => copy[element] !== null)\n  //   .reduce((accumulator, currentValue) => {\n  //     accumulator[currentValue] = copy[currentValue];\n  //     return accumulator;\n  //   }, {});\n  // console.log(\"data is\", filteredData);\n\n  // element.filter(ele => {\n  //   console.log(ele);\n  // });\n  // return keys.filter(key => {\n  //   console.log(element[key]);\n  //   return element[key] !== null;\n  // });\n\n  // console.log(\"data is\", filetedData);\n  // const keys = Object.keys(props.selectedPokemon[0]);\n  // props.selectedPokemon.map(element => {\n  //   console.log(element);\n  // });\n  // console.log(keys);\n  // for (keys in props.selectedPokemon[0]) {\n  //   console.log(props.selectedPokemon[0][keys]);\n  //   console.log(keys);\n  // }\n  // console.log(\"inside props table\", props.moveStats);\n  // console.log(props.moves);\n  // console.log(\"the data is data\", props.moves);\n\n  let moves = [];\n  let data = [];\n  let basePower = [];\n  let duration = [];\n  let energyDelta = [];\n  let moveCooldown = [];\n\n  // for (let key in props.moveStats) {\n  //   console.log(key);\n  // }\n  // for (let key in props.moves) {\n  //   const moveKeys = Object.keys(props.moveStats);\n  //   moveKeys.map(keys => {\n  //     if (keys === key) {\n  //       moves.push({ id: key, quickMoveStats: props.moveStats[key] });\n  //     }\n  //   });\n\n  //   data.push(key);\n  // }\n\n  // console.log(\"the data is \", moves);\n  // fining the largest\n  // let largest = Math.max(\n  //   ...moves.map(element => element.quickMoveStats.basePower)\n  // );\n  // basePower = moves.map(element => {\n  //   console.log(largest);\n  //   // const largest = Math.max(element.quickMoveStats.basePower);\n\n  //   if (largest === element.quickMoveStats.basePower) {\n  //     return (\n  //       <td key={Math.random()} className={classes.Largest}>\n  //         {element.quickMoveStats.basePower}\n  //       </td>\n  //     );\n  //   } else {\n  //     return <td key={Math.random()}>{element.quickMoveStats.basePower}</td>;\n  //   }\n  // });\n  quickquickMoves.map(element => {\n    return <td key={element.key}>{element.key}</td>;\n    console.log(\"element is\", element);\n  });\n\n  basePower = moves.map(el => {\n    console.log(\"printing el now\", el.quickMoveStats);\n    return <td key={Math.random()}>{el.quickMoveStats.basePower}</td>;\n  });\n\n  duration = moves.map(el => {\n    console.log(\"printing el now\", el.quickMoveStats);\n    return <td key={Math.random()}>{el.quickMoveStats.duration}</td>;\n  });\n\n  energyDelta = moves.map(el => (\n    <td key={Math.random()}> {el.quickMoveStats.energyDelta}</td>\n  ));\n  moveCooldown = moves.map(el => (\n    <td key={Math.random()}>{el.quickMoveStats.moveCooldown}</td>\n  ));\n\n  return (\n    <div className={classes.Table}>\n      <table>\n        <thead>\n          <tr>\n            <th key={Math.random()} style={{ textAlign: \"left\" }}>\n              Stats\n            </th>\n            {data.map((el, index) => {\n              return <th key={Math.random()}>{el} </th>;\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td key={Math.random()} style={{ textAlign: \"left\" }}>\n              Base Power\n            </td>\n            {basePower}\n          </tr>\n          <tr>\n            <td key={Math.random()} style={{ textAlign: \"left\" }}>\n              Duration\n            </td>\n            {duration}\n          </tr>\n          <tr>\n            <td key={Math.random()} style={{ textAlign: \"left\" }}>\n              Energy Delta\n            </td>\n            {energyDelta}\n          </tr>\n          <tr>\n            <td key={Math.random()} style={{ textAlign: \"left\" }}>\n              Move Cooldown\n            </td>\n            {moveCooldown}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default table;\n"]},"metadata":{},"sourceType":"module"}