{"ast":null,"code":"//production\nvar express = require(\"express\");\n\nvar cors = require(\"cors\");\n\nvar mysql = require(\"mysql\");\n\nvar path = require(\"path\");\n\nvar port = process.env.PORT || 3036;\nvar app = express();\napp.use(cors());\napp.options(\"*\", cors());\napp.use(express.urlencoded({\n  extended: true\n}));\napp.use(express.json());\nvar selectPokemon = \"\";\nvar selectFastMoves = \"\";\nvar selectChargeMoves = \"\";\nvar legacyMoves = \"\";\nvar connection = null;\n\nif (process.env.NODE_ENV === \"production\") {\n  app.use(express.static(path.join(__dirname, \"client/build\")));\n  selectPokemon = \"SELECT * FROM qlpetfztplb4quqy.pokemon;\";\n  selectFastMoves = \"SELECT * FROM qlpetfztplb4quqy.pvp_fast_moves;\";\n  selectChargeMoves = \"SELECT * FROM qlpetfztplb4quqy.pvp_charge_moves;\";\n  legacyMoves = \"SELECT * FROM qlpetfztplb4quqy.legacy_moves;\";\n  mewtable = \"SELECT * FROM qlpetfztplb4quqy.Mew_table;\";\n  connection = mysql.createConnection({\n    host: \"t89yihg12rw77y6f.cbetxkdyhwsb.us-east-1.rds.amazonaws.com\",\n    user: \"qiwlcbe6uzab0j32\",\n    password: \"huo0gh2vl1jdna4k\",\n    port: \"3306\",\n    database: \"qlpetfztplb4quqy\"\n  });\n  app.get(\"/\", function (req, res) {\n    res.sendFile(path.join(__dirname + \"/client/build/index.html\"));\n  }); //\n} else {\n  selectPokemon = \"SELECT * FROM pokemon.pokemon\";\n  selectFastMoves = \"SELECT * FROM pokemon.pvp_fast_moves\";\n  selectChargeMoves = \"SELECT * FROM pokemon.pvp_charge_moves\";\n  legacyMoves = \"SELECT * FROM pokemon.legacymoves\";\n  mewtable = \"SELECT * FROM pokemon.Mew_table;\";\n  connection = mysql.createConnection({\n    host: \"localhost\",\n    user: \"root\",\n    password: \"password\",\n    port: \"3306\",\n    database: \"pokemon\"\n  });\n  app.get(\"/\", function (req, res) {\n    res.send(\"hello from server\");\n  });\n}\n\nconnection.connect(function (err) {\n  if (err) {\n    console.log(err);\n    return err;\n  }\n}); // app.get(\"/products/add\", (req, res)=>{\n// })\n\napp.use(function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});\napp.get(\"/pokemon\", function (req, res) {\n  connection.query(selectPokemon, function (err, results) {\n    if (err) {\n      return res.send(err);\n    } else {\n      return res.json({\n        data: results\n      });\n    }\n  });\n});\napp.get(\"/chargemoves/add\", function (req, res) {\n  var _req$query = req.query,\n      chargeMoveName = _req$query.chargeMoveName,\n      basePower = _req$query.basePower,\n      energy = _req$query.energy,\n      damagePerEnergy = _req$query.damagePerEnergy;\n  console.log(chargeMoveName, basePower, energy, damagePerEnergy);\n  var INSERT_INTO_PVP_CHARGE_MOVES = \"INSERT INTO pvp_charge_moves(chargeMoveName, basePower, energy, damagePerEnergy) VALUES(\\\"\".concat(chargeMoveName, \"\\\", \").concat(basePower, \", \").concat(energy, \", \").concat(damagePerEnergy, \"  )\");\n  connection.query(INSERT_INTO_PVP_CHARGE_MOVES, function (err, results) {\n    if (err) {\n      return res.send(err);\n    } else {\n      return res.send(\"successful push to database\");\n    }\n  });\n});\napp.get(\"/fastmoves/add\", function (req, res) {\n  var _req$query2 = req.query,\n      fastMoveName = _req$query2.fastMoveName,\n      basePower = _req$query2.basePower,\n      duration = _req$query2.duration,\n      energyGained = _req$query2.energyGained,\n      coolDown = _req$query2.coolDown,\n      damagePerDuration = _req$query2.damagePerDuration,\n      energyPerDuration = _req$query2.energyPerDuration;\n  console.log(fastMoveName, basePower, duration, energyGained, coolDown, damagePerDuration, energyPerDuration);\n  var INSERT_INTO_PVP_FAST_MOVES = \"INSERT INTO pvp_fast_moves( fastMoveName,\\n    basePower,\\n    duration,\\n    energyGained,\\n    coolDown,\\n    damagePerDuration,\\n    energyPerDuration) VALUES(\\\"\".concat(fastMoveName, \"\\\", \").concat(basePower, \", \").concat(duration, \", \").concat(energyGained, \" , \").concat(coolDown, \" , \").concat(damagePerDuration, \" , \").concat(energyPerDuration, \")\");\n  connection.query(INSERT_INTO_PVP_FAST_MOVES, function (err, results) {\n    if (err) {\n      return res.send(err);\n    } else {\n      return res.send(\"successful push to database\");\n    }\n  });\n});\napp.get(\"/fastmoves\", function (req, res) {\n  connection.query(selectFastMoves, function (err, results) {\n    if (err) {\n      return res.send(err);\n    } else {\n      return res.json({\n        data: results\n      });\n    }\n  });\n});\napp.get(\"/chargemoves\", function (req, res) {\n  connection.query(selectChargeMoves, function (err, results) {\n    if (err) {\n      return res.send(err);\n    } else {\n      return res.json({\n        data: results\n      });\n    }\n  });\n}); // app.get(\"/\", (req, res) => {\n//   res.sendFile(path.join((__dirname = \"client/build/index.html\")));\n// });\n\napp.get(\"/legacymoves\", function (req, res) {\n  connection.query(legacyMoves, function (err, results) {\n    if (err) {\n      return res.send(err);\n    } else {\n      return res.json({\n        data: results\n      });\n    }\n  });\n});\napp.get(\"/mewtable\", function (req, res) {\n  connection.query(mewtable, function (err, results) {\n    if (err) {\n      return res.send(err);\n    } else {\n      return res.json({\n        data: results\n      });\n    }\n  });\n}); // app.listen(3036, () => {\n//   console.log(\"data on port 3036\");\n// });\n//Static file declaration\n// app.use(express.static(path.join(__dirname, \"client/build\")));\n// app.use(\"/static\", express.static(path.join(__dirname, \"client/build\")));\n// app.use(function(req, res) {\n//   res.sendFile(path.join(__dirname, \"index.html\"));\n// });\n//production mode\n// app.get(\"*\", (req, res) => {\n//   res.sendfile(path.join((__dirname, \"client/build\", \"index.html\")));\n// });\n//build mode\n// app.get(\"*\", (req, res) => {\n//   res.sendFile(path.join(__dirname + \"/client/build/index.html\"));\n// });\n//start server\n\napp.listen(port, function (req, res) {\n  console.log(\"server listening on port: \".concat(port));\n});","map":null,"metadata":{},"sourceType":"script"}