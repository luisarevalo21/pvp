{"ast":null,"code":"import _objectSpread from \"/Users/luise.arevalo/Desktop/React/pvp-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport React from \"react\"; // import classes from \"./Table.module.css\";\n\nvar table = function table(props) {\n  console.log(\"props.seclect pokemon\", props.selectedPokemon); //   console.log(\"the moves are\", props.quickMoves);\n  //   console.log(\"selected pokemon \", props.selectedPokemon);\n  //   console.log(\"legacy moves are\", props.legacyMoves);\n\n  var quickMoves = [];\n  var chargeMoves = [];\n  var quickMoveData = [];\n  var chargeMoveData = []; //   // let legacyMoves = [...props.legacyMoves];\n\n  var copy = _objectSpread({}, props.selectedPokemon[0]); //   // console.log(\"copy is copy\", copy);\n  //   // const moves = props.legacyMoves.filter(element => {\n  //   //   return element.moveName === copy.Pokemon;\n  //   // });\n  //   // // const legacy_moves = Object.values(moves[0]);\n  //   // console.log(\"moves\", legacy_moves);\n\n\n  for (var key in copy) {\n    // console.log(\"the key is\", key);\n    if (key === \"quick move 1\" || key === \"quick move 2\" || key === \"quick move 3\" || key === \"quick move 4\" || key === \"quick move 5\" || key === \"quick move 6\" || key === \"quick move 7\" || key === \"quick move 8\" || key === \"quick move 9\" || key === \"quick move 10\" || key === \"quick move 11\" || key === \"quick move 12\" || key === \"quick move 13\" || key === \"quick move 14\") {\n      // console.log(\"THE COPY KEY IS\", copy[key]);\n      quickMoves.push({\n        key: copy[key]\n      });\n    }\n\n    if (key === \"charge move 1\" || key === \"charge move 2\" || key === \"charge move 3\" || key === \"charge move 4\" || key === \"charge move 5\" || key === \"charge move 6\" || key === \"charge move 7\" || key === \"charge move 8\" || key === \"charge move 9\" || key === \"charge move 10\" || key === \"charge move 11\" || key === \"charge move 12\" || key === \"charge move 13\" || key === \"charge move 14\" || key === \"charge move 15\" || key === \"charge move 16\" || key === \"charge move 17\" || key === \"charge move 18\" || key === \"charge move 19\" || key === \"charge move 20\" || key === \"charge move 5\" || key === \"charge move 6\" || key === \"charge move 7\" || key === \"charge move 8\") {\n      chargeMoves.push({\n        key: copy[key]\n      });\n    }\n  } //     // if (\n  //     //   key === \"legacy move 1\" ||\n  //     //   key === \"legacy move 2\" ||\n  //     //   key === \"legacy move 3\" ||\n  //     //   key === \"legacy move 4\" ||\n  //     //   key === \"legacy move 5\" ||\n  //     //   key === \"legacy move 6\"\n  //     // ) {\n  //     //   legacyMoves.push(copy[key]);\n  //     // }\n  //     // console.log(\"value is\", props.quickMoves.map());\n  //   }\n  //   // console.log(\"legacy moves\", legacyMoves);\n  //   // console.log(\"QUICK MOES AARE\", quickMoves);\n  //   // console.log(\"quick moves are\", quickMoves);\n  //   quickMoveData = props.quickMoves\n  //     .map(element => {\n  //       let data = [];\n  //       for (let key in quickMoves) {\n  //         // console.log(\"keys are\", quickMoves[key].key);\n  //         // console.log(\"keys are\", element.fastMoveName);\n  //         // console.log(\"element. fastmovev name\", element);\n  //         // console.log(\"the key is\", chargeMoves[key].key);\n  //         // console.log(\"element quick moves[key].key\", quickMoves[key].key);\n  //         if (element.fastMoveName === quickMoves[key].key) {\n  //           // console.log(\"inside the if\");\n  //           // console.log(\"element inside if\", element);\n  //           data.push(element);\n  //         }\n  //       }\n  //       // console.log(data);\n  //       return data;\n  //       // return element.fastMoveName === quickMoves[element.fastMoveName];\n  //     })\n  //     .reduce((accumulator, currentValue) => {\n  //       // console.log(\"accumlator is \", accumulator);\n  //       // console.log(\"curentvalue is \", currentValue);\n  //       return accumulator.concat(currentValue);\n  //       // return accumulator[currentValue];\n  //     });\n  //   console.log(\"quick move data is data\", quickMoveData);\n  //   // console.log(\n  //   //   \"quick move data\",\n  //   //   Math.max.apply(null, quickMoveData.map(element => element.basePower))\n  //   // );\n  //   // console.log(\"quick move data\", quickMoveData.sort());\n  //   chargeMoveData = props.chargeMoves\n  //     .map(element => {\n  //       let data = [];\n  //       // console.log(\"eleent inside map is\", element);\n  //       for (let key in chargeMoves) {\n  //         // console.log(\"keys are\", quickMoves[key].key);\n  //         // console.log(\"keys are\", element.fastMoveName);\n  //         if (element.chargeMoveName === chargeMoves[key].key) {\n  //           data.push(element);\n  //         }\n  //       }\n  //       // console.log(data);\n  //       return data;\n  //       // return element.fastMoveName === quickMoves[element.fastMoveName];\n  //     })\n  //     .reduce((accumulator, currentValue) => {\n  //       // console.log(\"accumlator is \", accumulator);\n  //       // console.log(\"curentvalue is \", currentValue);\n  //       return accumulator.concat(currentValue);\n  //       // return accumulator[currentValue];\n  //     });\n  //   console.log(\"charge moves array is \", chargeMoveData);\n  //   let basePower = [];\n  //   // console.log(props.quickMoves);\n  //   let array = [];\n  //   let duration = [];\n  //   let energyDelta = [];\n  //   let moveCooldown = [];\n  //   let energyPerDuration = [];\n  //   let damagePerDuration = [];\n  //   basePower = quickMoveData.map(el => {\n  //     // array.push(el.basePower);\n  //     console.log(\"printing el now\", el.basePower);\n  //     return <td key={el.basePower + Math.random()}>{el.basePower}</td>;\n  //   });\n  //   duration = quickMoveData.map(el => {\n  //     // console.log(\"printing el now\", el.quickMoveStats);\n  //     return <td key={el.duration + Math.random()}>{el.duration}</td>;\n  //   });\n  //   energyDelta = quickMoveData.map(el => (\n  //     <td key={el.energyGained + Math.random()}> {el.energyGained}</td>\n  //   ));\n  //   moveCooldown = quickMoveData.map(el => (\n  //     <td key={el.cooldown + Math.random()}>{el.cooldown} </td>\n  //   ));\n  //   energyPerDuration = quickMoveData.map(el => (\n  //     <td key={el.energyPerDuration + Math.random()}> {el.energyPerDuration}</td>\n  //   ));\n  //   damagePerDuration = quickMoveData.map(el => (\n  //     <td key={el.damagePerDuration + Math.random()}> {el.damagePerDuration}</td>\n  //   ));\n  //   return (\n  //     <div\n  //       className={[\n  //         \"table\",\n  //         \"table-condensed\",\n  //         \"table-striped\",\n  //         classes.Table\n  //       ].join(\" \")}\n  //     >\n  //       <div className=\"table-responsive\">\n  //         <h3> Quick Moves</h3>\n  //         <table>\n  //           <thead>\n  //             <tr>\n  //               <th key={1}>Stats</th>\n  //               {quickMoveData.map(element => {\n  //                 // console.log(\"element inside quicmoves\", data);\n  //                 console.log(\"key is\", element);\n  //                 if (props.legacyMoves.includes(element.fastMoveName)) {\n  //                   console.log(\"found a legacy move\");\n  //                   return (\n  //                     <th key={element.fastMoveName + Math.random()}>\n  //                       {element.fastMoveName}*\n  //                     </th>\n  //                   );\n  //                 } else {\n  //                   console.log(\"element is\", element.fastMoveName);\n  //                   // console.log(\n  //                   //   \"HERE IS THE VLUE NOW\",\n  //                   // legacyMoves.map(legacy => {\n  //                   //   console.log(\"element .key \", element.key);\n  //                   //   console.log(\"legacy \", legacy);\n  //                   //   if (element.key === legacy) {\n  //                   //     return <th key={element.key}>{element.key}*</th>;\n  //                   //   } else {\n  //                   return (\n  //                     <th key={element.fastMoveName + Math.random()}>\n  //                       {element.fastMoveName}\n  //                     </th>\n  //                   );\n  //                 }\n  //               })}\n  //               {/*\n  //             {data.map((el, index) => {\n  //               return <th key={Math.random()}>{el} </th>;\n  //             })} */}\n  //             </tr>\n  //           </thead>\n  //           <tbody>\n  //             <tr>\n  //               <td key={2}>Base Power</td>\n  //               {basePower}\n  //             </tr>\n  //             <tr>\n  //               <td key={3}>Turn</td>\n  //               {duration}\n  //             </tr>\n  //             <tr>\n  //               <td key={4}>Energy Delta</td>\n  //               {energyDelta}\n  //             </tr>\n  //             <tr>\n  //               <td key={5}>Move Cooldown</td>\n  //               {moveCooldown}\n  //             </tr>\n  //             <tr>\n  //               <td key={6}>Energy Per Turn</td>\n  //               {energyPerDuration}\n  //             </tr>\n  //             <tr>\n  //               <td key={7}>Damage Per Turn</td>\n  //               {damagePerDuration}\n  //             </tr>\n  //           </tbody>\n  //         </table>\n  //         <p>* indicates legacy move</p>\n  //       </div>\n  //       <br />\n  //       <div className=\"table-responsive\">\n  //         <h3>Charge Moves</h3>\n  //         <table>\n  //           <thead>\n  //             <tr>\n  //               <th key={8}>Stats</th>\n  //               {chargeMoveData.map(element => {\n  //                 if (props.legacyMoves.includes(element.chargeMoveName)) {\n  //                   return (\n  //                     <th key={element.chargeMoveName}>\n  //                       {element.chargeMoveName}*\n  //                     </th>\n  //                   );\n  //                 } else {\n  //                   return (\n  //                     <th key={element.chargeMoveName}>\n  //                       {element.chargeMoveName}\n  //                     </th>\n  //                   );\n  //                 }\n  //               })}\n  //             </tr>\n  //           </thead>\n  //           <tbody>\n  //             <tr>\n  //               <td key={9}>Base Power</td>\n  //               {chargeMoveData.map(element => {\n  //                 // console.log(\"the eelement is\", element);\n  //                 return (\n  //                   <th key={element.chargeMoveName}>{element.basePower}</th>\n  //                 );\n  //               })}\n  //             </tr>\n  //             <tr>\n  //               <td key={10}>Charge Energy</td>\n  //               {chargeMoveData.map(element => {\n  //                 // console.log(element);\n  //                 return <th key={element.chargeMoveName}>{element.energy}</th>;\n  //               })}\n  //             </tr>\n  //             <tr>\n  //               <td key={11}>Damage Per Energy</td>\n  //               {chargeMoveData.map(element => {\n  //                 // console.log(element);\n  //                 return (\n  //                   <th key={element.chargeMoveName}>\n  //                     {element.damagePerEnergy}\n  //                   </th>\n  //                 );\n  //               })}\n  //             </tr>\n  //           </tbody>\n  //         </table>\n  //         <p>* indicates legacy move</p>\n  //       </div>\n  //     </div>\n  //   );\n  // };\n\n};\n\nexport default table;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/pvp-app/client/src/UI/MewTable/MewTable.js"],"names":["React","table","props","console","log","selectedPokemon","quickMoves","chargeMoves","quickMoveData","chargeMoveData","copy","key","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,KAAK,CAACG,eAA3C,EADqB,CAGrB;AACA;AACA;;AACA,MAAMC,UAAU,GAAG,EAAnB;AACA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,cAAc,GAAG,EAArB,CATqB,CAUrB;;AACA,MAAMC,IAAI,qBAAQR,KAAK,CAACG,eAAN,CAAsB,CAAtB,CAAR,CAAV,CAXqB,CAYrB;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAK,IAAIM,GAAT,IAAgBD,IAAhB,EAAsB;AACpB;AACA,QACEC,GAAG,KAAK,cAAR,IACAA,GAAG,KAAK,cADR,IAEAA,GAAG,KAAK,cAFR,IAGAA,GAAG,KAAK,cAHR,IAIAA,GAAG,KAAK,cAJR,IAKAA,GAAG,KAAK,cALR,IAMAA,GAAG,KAAK,cANR,IAOAA,GAAG,KAAK,cAPR,IAQAA,GAAG,KAAK,cARR,IASAA,GAAG,KAAK,eATR,IAUAA,GAAG,KAAK,eAVR,IAWAA,GAAG,KAAK,eAXR,IAYAA,GAAG,KAAK,eAZR,IAaAA,GAAG,KAAK,eAdV,EAeE;AACA;AACAL,MAAAA,UAAU,CAACM,IAAX,CAAgB;AAAED,QAAAA,GAAG,EAAED,IAAI,CAACC,GAAD;AAAX,OAAhB;AACD;;AACD,QACEA,GAAG,KAAK,eAAR,IACAA,GAAG,KAAK,eADR,IAEAA,GAAG,KAAK,eAFR,IAGAA,GAAG,KAAK,eAHR,IAIAA,GAAG,KAAK,eAJR,IAKAA,GAAG,KAAK,eALR,IAMAA,GAAG,KAAK,eANR,IAOAA,GAAG,KAAK,eAPR,IAQAA,GAAG,KAAK,eARR,IASAA,GAAG,KAAK,gBATR,IAUAA,GAAG,KAAK,gBAVR,IAWAA,GAAG,KAAK,gBAXR,IAYAA,GAAG,KAAK,gBAZR,IAaAA,GAAG,KAAK,gBAbR,IAcAA,GAAG,KAAK,gBAdR,IAeAA,GAAG,KAAK,gBAfR,IAgBAA,GAAG,KAAK,gBAhBR,IAiBAA,GAAG,KAAK,gBAjBR,IAkBAA,GAAG,KAAK,gBAlBR,IAmBAA,GAAG,KAAK,gBAnBR,IAoBAA,GAAG,KAAK,eApBR,IAqBAA,GAAG,KAAK,eArBR,IAsBAA,GAAG,KAAK,eAtBR,IAuBAA,GAAG,KAAK,eAxBV,EAyBE;AACAJ,MAAAA,WAAW,CAACK,IAAZ,CAAiB;AAAED,QAAAA,GAAG,EAAED,IAAI,CAACC,GAAD;AAAX,OAAjB;AACD;AACF,GAnEoB,CAoEreAAeV,KAAf","sourcesContent":["import React from \"react\";\n// import classes from \"./Table.module.css\";\n\nconst table = props => {\n  console.log(\"props.seclect pokemon\", props.selectedPokemon);\n\n  //   console.log(\"the moves are\", props.quickMoves);\n  //   console.log(\"selected pokemon \", props.selectedPokemon);\n  //   console.log(\"legacy moves are\", props.legacyMoves);\n  const quickMoves = [];\n  const chargeMoves = [];\n  let quickMoveData = [];\n  let chargeMoveData = [];\n  //   // let legacyMoves = [...props.legacyMoves];\n  const copy = { ...props.selectedPokemon[0] };\n  //   // console.log(\"copy is copy\", copy);\n  //   // const moves = props.legacyMoves.filter(element => {\n  //   //   return element.moveName === copy.Pokemon;\n  //   // });\n  //   // // const legacy_moves = Object.values(moves[0]);\n  //   // console.log(\"moves\", legacy_moves);\n  for (let key in copy) {\n    // console.log(\"the key is\", key);\n    if (\n      key === \"quick move 1\" ||\n      key === \"quick move 2\" ||\n      key === \"quick move 3\" ||\n      key === \"quick move 4\" ||\n      key === \"quick move 5\" ||\n      key === \"quick move 6\" ||\n      key === \"quick move 7\" ||\n      key === \"quick move 8\" ||\n      key === \"quick move 9\" ||\n      key === \"quick move 10\" ||\n      key === \"quick move 11\" ||\n      key === \"quick move 12\" ||\n      key === \"quick move 13\" ||\n      key === \"quick move 14\"\n    ) {\n      // console.log(\"THE COPY KEY IS\", copy[key]);\n      quickMoves.push({ key: copy[key] });\n    }\n    if (\n      key === \"charge move 1\" ||\n      key === \"charge move 2\" ||\n      key === \"charge move 3\" ||\n      key === \"charge move 4\" ||\n      key === \"charge move 5\" ||\n      key === \"charge move 6\" ||\n      key === \"charge move 7\" ||\n      key === \"charge move 8\" ||\n      key === \"charge move 9\" ||\n      key === \"charge move 10\" ||\n      key === \"charge move 11\" ||\n      key === \"charge move 12\" ||\n      key === \"charge move 13\" ||\n      key === \"charge move 14\" ||\n      key === \"charge move 15\" ||\n      key === \"charge move 16\" ||\n      key === \"charge move 17\" ||\n      key === \"charge move 18\" ||\n      key === \"charge move 19\" ||\n      key === \"charge move 20\" ||\n      key === \"charge move 5\" ||\n      key === \"charge move 6\" ||\n      key === \"charge move 7\" ||\n      key === \"charge move 8\"\n    ) {\n      chargeMoves.push({ key: copy[key] });\n    }\n  }\n  //     // if (\n  //     //   key === \"legacy move 1\" ||\n  //     //   key === \"legacy move 2\" ||\n  //     //   key === \"legacy move 3\" ||\n  //     //   key === \"legacy move 4\" ||\n  //     //   key === \"legacy move 5\" ||\n  //     //   key === \"legacy move 6\"\n  //     // ) {\n  //     //   legacyMoves.push(copy[key]);\n  //     // }\n  //     // console.log(\"value is\", props.quickMoves.map());\n  //   }\n  //   // console.log(\"legacy moves\", legacyMoves);\n  //   // console.log(\"QUICK MOES AARE\", quickMoves);\n  //   // console.log(\"quick moves are\", quickMoves);\n  //   quickMoveData = props.quickMoves\n  //     .map(element => {\n  //       let data = [];\n  //       for (let key in quickMoves) {\n  //         // console.log(\"keys are\", quickMoves[key].key);\n  //         // console.log(\"keys are\", element.fastMoveName);\n  //         // console.log(\"element. fastmovev name\", element);\n  //         // console.log(\"the key is\", chargeMoves[key].key);\n  //         // console.log(\"element quick moves[key].key\", quickMoves[key].key);\n  //         if (element.fastMoveName === quickMoves[key].key) {\n  //           // console.log(\"inside the if\");\n  //           // console.log(\"element inside if\", element);\n  //           data.push(element);\n  //         }\n  //       }\n  //       // console.log(data);\n  //       return data;\n  //       // return element.fastMoveName === quickMoves[element.fastMoveName];\n  //     })\n  //     .reduce((accumulator, currentValue) => {\n  //       // console.log(\"accumlator is \", accumulator);\n  //       // console.log(\"curentvalue is \", currentValue);\n  //       return accumulator.concat(currentValue);\n  //       // return accumulator[currentValue];\n  //     });\n  //   console.log(\"quick move data is data\", quickMoveData);\n  //   // console.log(\n  //   //   \"quick move data\",\n  //   //   Math.max.apply(null, quickMoveData.map(element => element.basePower))\n  //   // );\n  //   // console.log(\"quick move data\", quickMoveData.sort());\n  //   chargeMoveData = props.chargeMoves\n  //     .map(element => {\n  //       let data = [];\n  //       // console.log(\"eleent inside map is\", element);\n  //       for (let key in chargeMoves) {\n  //         // console.log(\"keys are\", quickMoves[key].key);\n  //         // console.log(\"keys are\", element.fastMoveName);\n  //         if (element.chargeMoveName === chargeMoves[key].key) {\n  //           data.push(element);\n  //         }\n  //       }\n  //       // console.log(data);\n  //       return data;\n  //       // return element.fastMoveName === quickMoves[element.fastMoveName];\n  //     })\n  //     .reduce((accumulator, currentValue) => {\n  //       // console.log(\"accumlator is \", accumulator);\n  //       // console.log(\"curentvalue is \", currentValue);\n  //       return accumulator.concat(currentValue);\n  //       // return accumulator[currentValue];\n  //     });\n  //   console.log(\"charge moves array is \", chargeMoveData);\n  //   let basePower = [];\n  //   // console.log(props.quickMoves);\n  //   let array = [];\n  //   let duration = [];\n  //   let energyDelta = [];\n  //   let moveCooldown = [];\n  //   let energyPerDuration = [];\n  //   let damagePerDuration = [];\n  //   basePower = quickMoveData.map(el => {\n  //     // array.push(el.basePower);\n  //     console.log(\"printing el now\", el.basePower);\n  //     return <td key={el.basePower + Math.random()}>{el.basePower}</td>;\n  //   });\n  //   duration = quickMoveData.map(el => {\n  //     // console.log(\"printing el now\", el.quickMoveStats);\n  //     return <td key={el.duration + Math.random()}>{el.duration}</td>;\n  //   });\n  //   energyDelta = quickMoveData.map(el => (\n  //     <td key={el.energyGained + Math.random()}> {el.energyGained}</td>\n  //   ));\n  //   moveCooldown = quickMoveData.map(el => (\n  //     <td key={el.cooldown + Math.random()}>{el.cooldown} </td>\n  //   ));\n  //   energyPerDuration = quickMoveData.map(el => (\n  //     <td key={el.energyPerDuration + Math.random()}> {el.energyPerDuration}</td>\n  //   ));\n  //   damagePerDuration = quickMoveData.map(el => (\n  //     <td key={el.damagePerDuration + Math.random()}> {el.damagePerDuration}</td>\n  //   ));\n  //   return (\n  //     <div\n  //       className={[\n  //         \"table\",\n  //         \"table-condensed\",\n  //         \"table-striped\",\n  //         classes.Table\n  //       ].join(\" \")}\n  //     >\n  //       <div className=\"table-responsive\">\n  //         <h3> Quick Moves</h3>\n  //         <table>\n  //           <thead>\n  //             <tr>\n  //               <th key={1}>Stats</th>\n  //               {quickMoveData.map(element => {\n  //                 // console.log(\"element inside quicmoves\", data);\n  //                 console.log(\"key is\", element);\n  //                 if (props.legacyMoves.includes(element.fastMoveName)) {\n  //                   console.log(\"found a legacy move\");\n  //                   return (\n  //                     <th key={element.fastMoveName + Math.random()}>\n  //                       {element.fastMoveName}*\n  //                     </th>\n  //                   );\n  //                 } else {\n  //                   console.log(\"element is\", element.fastMoveName);\n  //                   // console.log(\n  //                   //   \"HERE IS THE VLUE NOW\",\n  //                   // legacyMoves.map(legacy => {\n  //                   //   console.log(\"element .key \", element.key);\n  //                   //   console.log(\"legacy \", legacy);\n  //                   //   if (element.key === legacy) {\n  //                   //     return <th key={element.key}>{element.key}*</th>;\n  //                   //   } else {\n  //                   return (\n  //                     <th key={element.fastMoveName + Math.random()}>\n  //                       {element.fastMoveName}\n  //                     </th>\n  //                   );\n  //                 }\n  //               })}\n  //               {/*\n  //             {data.map((el, index) => {\n  //               return <th key={Math.random()}>{el} </th>;\n  //             })} */}\n  //             </tr>\n  //           </thead>\n  //           <tbody>\n  //             <tr>\n  //               <td key={2}>Base Power</td>\n  //               {basePower}\n  //             </tr>\n  //             <tr>\n  //               <td key={3}>Turn</td>\n  //               {duration}\n  //             </tr>\n  //             <tr>\n  //               <td key={4}>Energy Delta</td>\n  //               {energyDelta}\n  //             </tr>\n  //             <tr>\n  //               <td key={5}>Move Cooldown</td>\n  //               {moveCooldown}\n  //             </tr>\n  //             <tr>\n  //               <td key={6}>Energy Per Turn</td>\n  //               {energyPerDuration}\n  //             </tr>\n  //             <tr>\n  //               <td key={7}>Damage Per Turn</td>\n  //               {damagePerDuration}\n  //             </tr>\n  //           </tbody>\n  //         </table>\n  //         <p>* indicates legacy move</p>\n  //       </div>\n  //       <br />\n  //       <div className=\"table-responsive\">\n  //         <h3>Charge Moves</h3>\n  //         <table>\n  //           <thead>\n  //             <tr>\n  //               <th key={8}>Stats</th>\n  //               {chargeMoveData.map(element => {\n  //                 if (props.legacyMoves.includes(element.chargeMoveName)) {\n  //                   return (\n  //                     <th key={element.chargeMoveName}>\n  //                       {element.chargeMoveName}*\n  //                     </th>\n  //                   );\n  //                 } else {\n  //                   return (\n  //                     <th key={element.chargeMoveName}>\n  //                       {element.chargeMoveName}\n  //                     </th>\n  //                   );\n  //                 }\n  //               })}\n  //             </tr>\n  //           </thead>\n  //           <tbody>\n  //             <tr>\n  //               <td key={9}>Base Power</td>\n  //               {chargeMoveData.map(element => {\n  //                 // console.log(\"the eelement is\", element);\n  //                 return (\n  //                   <th key={element.chargeMoveName}>{element.basePower}</th>\n  //                 );\n  //               })}\n  //             </tr>\n  //             <tr>\n  //               <td key={10}>Charge Energy</td>\n  //               {chargeMoveData.map(element => {\n  //                 // console.log(element);\n  //                 return <th key={element.chargeMoveName}>{element.energy}</th>;\n  //               })}\n  //             </tr>\n  //             <tr>\n  //               <td key={11}>Damage Per Energy</td>\n  //               {chargeMoveData.map(element => {\n  //                 // console.log(element);\n  //                 return (\n  //                   <th key={element.chargeMoveName}>\n  //                     {element.damagePerEnergy}\n  //                   </th>\n  //                 );\n  //               })}\n  //             </tr>\n  //           </tbody>\n  //         </table>\n  //         <p>* indicates legacy move</p>\n  //       </div>\n  //     </div>\n  //   );\n  // };\n};\n\nexport default table;\n"]},"metadata":{},"sourceType":"module"}