{"ast":null,"code":"import _objectSpread from \"/Users/luise.arevalo/Desktop/React/pvp-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/luise.arevalo/Desktop/React/pvp-app/src/UI/Table/Table.js\";\nimport React from \"react\";\nimport classes from \"./Table.module.css\";\n\nvar table = function table(props) {\n  console.log(\"the moves are\", props.quickMoves);\n  console.log(\"selected pokemon \", props.selectedPokemon);\n  var quickMoves = [];\n  var chargeMoves = [];\n  var quickMoveData = [];\n  var chargeMoveData = [];\n  var legacyMoves = [];\n\n  var copy = _objectSpread({}, props.selectedPokemon[0]); // console.log(\"copy\", copy);\n  // let filertedData = {};\n\n\n  for (var key in copy) {\n    console.log(\"the key is\", key);\n\n    if (key === \"quick move 1\" || key === \"quick move 2\" || key === \"quick move 3\" || key === \"quick move 4\" || key === \"quick move 5\") {\n      quickMoves.push({\n        key: copy[key]\n      });\n    } else if (key === \"charge move 1\" || key === \"charge move 2\" || key === \"charge move 3\" || key === \"charge move 4\" || key === \"charge move 5\" || key === \"charge move 6\" || key === \"charge move 7\" || key === \"charge move 8\") {\n      chargeMoves.push({\n        key: copy[key]\n      });\n    } else if (key === \"legacy move 1\" || key === \"legacy move 2\" || key === \"legacy move 3\" || key === \"legacy move 4\" || key === \"legacy move 5\") {\n      legacyMoves.push({\n        key: copy[key]\n      });\n    } // console.log(\"value is\", props.quickMoves.map());\n\n  } // console.log(\"legacy moves\", legacyMoves);\n  // console.log(\"QUICK MOES AARE\", quickMoves);\n  // console.log(\"quick moves are\", quickMoves);\n\n\n  quickMoveData = props.quickMoves.map(function (element) {\n    var data = [];\n\n    for (var _key in quickMoves) {\n      // console.log(\"keys are\", quickMoves[key].key);\n      // console.log(\"keys are\", element.fastMoveName);\n      // console.log(\"element. fastmovev name\", element);\n      // console.log(\"the key is\", chargeMoves[key].key);\n      // console.log(\"element quick moves[key].key\", quickMoves[key].key);\n      if (element.fastMoveName === quickMoves[_key].key) {\n        // console.log(\"inside the if\");\n        // console.log(\"element inside if\", element);\n        data.push(element);\n      }\n    } // console.log(data);\n\n\n    return data; // return element.fastMoveName === quickMoves[element.fastMoveName];\n  }).reduce(function (accumulator, currentValue) {\n    // console.log(\"accumlator is \", accumulator);\n    // console.log(\"curentvalue is \", currentValue);\n    return accumulator.concat(currentValue); // return accumulator[currentValue];\n  }); // console.log(\"quick move data\", quickMoveData);\n\n  chargeMoveData = props.chargeMoves.map(function (element) {\n    var data = []; // console.log(\"eleent inside map is\", element);\n\n    for (var _key2 in chargeMoves) {\n      // console.log(\"keys are\", quickMoves[key].key);\n      // console.log(\"keys are\", element.fastMoveName);\n      if (element.chargeMoveName === chargeMoves[_key2].key) {\n        data.push(element);\n      }\n    } // console.log(data);\n\n\n    return data; // return element.fastMoveName === quickMoves[element.fastMoveName];\n  }).reduce(function (accumulator, currentValue) {\n    // console.log(\"accumlator is \", accumulator);\n    // console.log(\"curentvalue is \", currentValue);\n    return accumulator.concat(currentValue); // return accumulator[currentValue];\n  }); // console.log(\"charge moves array is \", chargeMoveData);\n\n  var basePower = [];\n  var duration = [];\n  var energyDelta = [];\n  var moveCooldown = [];\n  var energyPerDuration = [];\n  var damagePerDuration = [];\n  basePower = quickMoveData.map(function (el) {\n    // console.log(\"printing el now\", el.basePower);\n    return React.createElement(\"td\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, el.basePower);\n  });\n  duration = quickMoveData.map(function (el) {\n    // console.log(\"printing el now\", el.quickMoveStats);\n    return React.createElement(\"td\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, el.duration);\n  });\n  energyDelta = quickMoveData.map(function (el) {\n    return React.createElement(\"td\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \" \", el.energyGained);\n  });\n  moveCooldown = quickMoveData.map(function (el) {\n    return React.createElement(\"td\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, el.cooldown, \" \");\n  });\n  energyPerDuration = quickMoveData.map(function (el) {\n    return React.createElement(\"td\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \" \", el.energyPerDuration);\n  });\n  damagePerDuration = quickMoveData.map(function (el) {\n    return React.createElement(\"td\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \" \", el.damagePerDuration);\n  });\n  return React.createElement(\"div\", {\n    className: [\"table\", \"table-condensed\", \"table-striped\", classes.Table].join(\" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \" Quick Moves\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    key: Math.random(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Stats\"), quickMoves.map(function (element) {\n    for (var _key3 in legacyMoves) {\n      console.log(\"element inside quicmoves\", element.key);\n      console.log(\"HERE IS THE VLUE NOW\", legacyMoves);\n\n      if (element.key === legacyMoves[_key3]) {\n        return React.createElement(\"th\", {\n          key: element.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, element.key, \"*\");\n      } else {\n        return React.createElement(\"th\", {\n          key: element.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, element.key);\n      }\n    }\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Base Power\"), basePower), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Duration\"), duration), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Energy Delta\"), energyDelta), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Move Cooldown\"), moveCooldown), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Energy Per Duration\"), energyPerDuration), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Damage Per Duration\"), damagePerDuration))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Charge Moves\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    key: Math.random(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Stats\"), chargeMoveData.map(function (element) {\n    console.log(element);\n    return React.createElement(\"th\", {\n      key: element.chargeMoveName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, element.chargeMoveName);\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"Base Power\"), chargeMoveData.map(function (element) {\n    // console.log(\"the eelement is\", element);\n    return React.createElement(\"th\", {\n      key: element.chargeMoveName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, element.basePower);\n  })), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, \"Charge Energy\"), chargeMoveData.map(function (element) {\n    console.log(element);\n    return React.createElement(\"th\", {\n      key: element.chargeMoveName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, element.energy);\n  })), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"Damage Per Energy\"), chargeMoveData.map(function (element) {\n    console.log(element);\n    return React.createElement(\"th\", {\n      key: element.chargeMoveName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, element.damagePerEnergy);\n  })))));\n};\n\nexport default table;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/pvp-app/src/UI/Table/Table.js"],"names":["React","classes","table","props","console","log","quickMoves","selectedPokemon","chargeMoves","quickMoveData","chargeMoveData","legacyMoves","copy","key","push","map","element","data","fastMoveName","reduce","accumulator","currentValue","concat","chargeMoveName","basePower","duration","energyDelta","moveCooldown","energyPerDuration","damagePerDuration","el","Math","random","energyGained","cooldown","Table","join","energy","damagePerEnergy"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classes from \"./Table.module.css\";\n\nconst table = props => {\n  console.log(\"the moves are\", props.quickMoves);\n  console.log(\"selected pokemon \", props.selectedPokemon);\n  const quickMoves = [];\n  const chargeMoves = [];\n  let quickMoveData = [];\n  let chargeMoveData = [];\n  let legacyMoves = [];\n  const copy = { ...props.selectedPokemon[0] };\n  // console.log(\"copy\", copy);\n  // let filertedData = {};\n  for (let key in copy) {\n    console.log(\"the key is\", key);\n    if (\n      key === \"quick move 1\" ||\n      key === \"quick move 2\" ||\n      key === \"quick move 3\" ||\n      key === \"quick move 4\" ||\n      key === \"quick move 5\"\n    ) {\n      quickMoves.push({ key: copy[key] });\n    } else if (\n      key === \"charge move 1\" ||\n      key === \"charge move 2\" ||\n      key === \"charge move 3\" ||\n      key === \"charge move 4\" ||\n      key === \"charge move 5\" ||\n      key === \"charge move 6\" ||\n      key === \"charge move 7\" ||\n      key === \"charge move 8\"\n    ) {\n      chargeMoves.push({ key: copy[key] });\n    } else if (\n      key === \"legacy move 1\" ||\n      key === \"legacy move 2\" ||\n      key === \"legacy move 3\" ||\n      key === \"legacy move 4\" ||\n      key === \"legacy move 5\"\n    ) {\n      legacyMoves.push({ key: copy[key] });\n    }\n\n    // console.log(\"value is\", props.quickMoves.map());\n  }\n  // console.log(\"legacy moves\", legacyMoves);\n\n  // console.log(\"QUICK MOES AARE\", quickMoves);\n  // console.log(\"quick moves are\", quickMoves);\n  quickMoveData = props.quickMoves\n    .map(element => {\n      let data = [];\n      for (let key in quickMoves) {\n        // console.log(\"keys are\", quickMoves[key].key);\n        // console.log(\"keys are\", element.fastMoveName);\n\n        // console.log(\"element. fastmovev name\", element);\n        // console.log(\"the key is\", chargeMoves[key].key);\n        // console.log(\"element quick moves[key].key\", quickMoves[key].key);\n        if (element.fastMoveName === quickMoves[key].key) {\n          // console.log(\"inside the if\");\n          // console.log(\"element inside if\", element);\n          data.push(element);\n        }\n      }\n      // console.log(data);\n      return data;\n\n      // return element.fastMoveName === quickMoves[element.fastMoveName];\n    })\n    .reduce((accumulator, currentValue) => {\n      // console.log(\"accumlator is \", accumulator);\n      // console.log(\"curentvalue is \", currentValue);\n      return accumulator.concat(currentValue);\n      // return accumulator[currentValue];\n    });\n\n  // console.log(\"quick move data\", quickMoveData);\n  chargeMoveData = props.chargeMoves\n    .map(element => {\n      let data = [];\n      // console.log(\"eleent inside map is\", element);\n      for (let key in chargeMoves) {\n        // console.log(\"keys are\", quickMoves[key].key);\n        // console.log(\"keys are\", element.fastMoveName);\n\n        if (element.chargeMoveName === chargeMoves[key].key) {\n          data.push(element);\n        }\n      }\n      // console.log(data);\n      return data;\n\n      // return element.fastMoveName === quickMoves[element.fastMoveName];\n    })\n    .reduce((accumulator, currentValue) => {\n      // console.log(\"accumlator is \", accumulator);\n      // console.log(\"curentvalue is \", currentValue);\n      return accumulator.concat(currentValue);\n      // return accumulator[currentValue];\n    });\n  // console.log(\"charge moves array is \", chargeMoveData);\n\n  let basePower = [];\n  let duration = [];\n  let energyDelta = [];\n  let moveCooldown = [];\n  let energyPerDuration = [];\n  let damagePerDuration = [];\n  basePower = quickMoveData.map(el => {\n    // console.log(\"printing el now\", el.basePower);\n    return <td key={Math.random()}>{el.basePower}</td>;\n  });\n\n  duration = quickMoveData.map(el => {\n    // console.log(\"printing el now\", el.quickMoveStats);\n    return <td key={Math.random()}>{el.duration}</td>;\n  });\n\n  energyDelta = quickMoveData.map(el => (\n    <td key={Math.random()}> {el.energyGained}</td>\n  ));\n  moveCooldown = quickMoveData.map(el => (\n    <td key={Math.random()}>{el.cooldown} </td>\n  ));\n  energyPerDuration = quickMoveData.map(el => (\n    <td key={Math.random()}> {el.energyPerDuration}</td>\n  ));\n  damagePerDuration = quickMoveData.map(el => (\n    <td key={Math.random()}> {el.damagePerDuration}</td>\n  ));\n\n  return (\n    <div\n      className={[\n        \"table\",\n        \"table-condensed\",\n        \"table-striped\",\n        classes.Table\n      ].join(\" \")}\n    >\n      <h3> Quick Moves</h3>\n      <table>\n        <thead>\n          <tr>\n            <th key={Math.random()}>Stats</th>\n\n            {quickMoves.map(element => {\n              for (let key in legacyMoves) {\n                console.log(\"element inside quicmoves\", element.key);\n                console.log(\"HERE IS THE VLUE NOW\", legacyMoves);\n\n                if (element.key === legacyMoves[key]) {\n                  return <th key={element.key}>{element.key}*</th>;\n                } else {\n                  return <th key={element.key}>{element.key}</th>;\n                }\n              }\n            })}\n            {/* \n            {data.map((el, index) => {\n              return <th key={Math.random()}>{el} </th>;\n            })} */}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td key={Math.random()}>Base Power</td>\n            {basePower}\n          </tr>\n          <tr>\n            <td key={Math.random()}>Duration</td>\n            {duration}\n          </tr>\n          <tr>\n            <td key={Math.random()}>Energy Delta</td>\n            {energyDelta}\n          </tr>\n          <tr>\n            <td key={Math.random()}>Move Cooldown</td>\n            {moveCooldown}\n          </tr>\n          <tr>\n            <td key={Math.random()}>Energy Per Duration</td>\n            {energyPerDuration}\n          </tr>\n          <tr>\n            <td key={Math.random()}>Damage Per Duration</td>\n            {damagePerDuration}\n          </tr>\n        </tbody>\n      </table>\n\n      <br />\n      <h3>Charge Moves</h3>\n      <table>\n        <thead>\n          <tr>\n            <th key={Math.random()}>Stats</th>\n            {chargeMoveData.map(element => {\n              console.log(element);\n              return (\n                <th key={element.chargeMoveName}>{element.chargeMoveName}</th>\n              );\n            })}\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr>\n            <td key={Math.random()}>Base Power</td>\n            {chargeMoveData.map(element => {\n              // console.log(\"the eelement is\", element);\n              return <th key={element.chargeMoveName}>{element.basePower}</th>;\n            })}\n          </tr>\n          <tr>\n            <td key={Math.random()}>Charge Energy</td>\n            {chargeMoveData.map(element => {\n              console.log(element);\n              return <th key={element.chargeMoveName}>{element.energy}</th>;\n            })}\n          </tr>\n          <tr>\n            <td key={Math.random()}>Damage Per Energy</td>\n            {chargeMoveData.map(element => {\n              console.log(element);\n              return (\n                <th key={element.chargeMoveName}>{element.damagePerEnergy}</th>\n              );\n            })}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default table;\n"]},"metadata":{},"sourceType":"module"}