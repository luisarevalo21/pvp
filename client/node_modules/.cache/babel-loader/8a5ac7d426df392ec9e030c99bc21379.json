{"ast":null,"code":"import _toConsumableArray from \"/Users/luise.arevalo/Desktop/React/pvp-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/luise.arevalo/Desktop/React/pvp-app/src/UI/Table/Table.js\";\nimport React from \"react\";\nimport classes from \"./Table.module.css\";\n\nvar table = function table(props) {\n  console.log(\"inside props table\", props.moveStats);\n  console.log(props.moves);\n  console.log(\"the data is data\", props.moves);\n  var moves = [];\n  var data = [];\n  var basePower = [];\n  var duration = [];\n  var energyDelta = [];\n  var moveCooldown = [];\n\n  for (var key in props.moveStats) {\n    console.log(key);\n  }\n\n  var _loop = function _loop(_key) {\n    var moveKeys = Object.keys(props.moveStats);\n    moveKeys.map(function (keys) {\n      if (keys === _key) {\n        moves.push({\n          id: _key,\n          quickMoveStats: props.moveStats[_key]\n        });\n      }\n    });\n    data.push(_key);\n  };\n\n  for (var _key in props.moves) {\n    _loop(_key);\n  }\n\n  console.log(\"the data is \", moves);\n  var largest = Math.max.apply(Math, _toConsumableArray(moves.map(function (element) {\n    return element.quickMoveStats.basePower;\n  })));\n  basePower = moves.map(function (element) {\n    console.log(largest); // const largest = Math.max(element.quickMoveStats.basePower);\n\n    if (largest === element.quickMoveStats.basePower) {\n      return React.createElement(\"td\", {\n        key: Math.random(),\n        className: classes.Largest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, element.quickMoveStats.basePower);\n    } else {\n      return React.createElement(\"td\", {\n        key: Math.random(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, element.quickMoveStats.basePower);\n    }\n  });\n  largest = Math.max.apply(Math, _toConsumableArray(moves.map(function (element) {\n    return element.quickMoveStats.duration;\n  })));\n  duration = moves.map(function (el) {\n    if (largest === element.quickMoveStats.basePower) {\n      return React.createElement(\"td\", {\n        key: Math.random(),\n        className: classes.Largest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, element.quickMoveStats.duration);\n    }\n\n    console.log(\"printing el now\", el.quickMoveStats);\n    return React.createElement(\"td\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, el.quickMoveStats.duration);\n  });\n  energyDelta = moves.map(function (el) {\n    return React.createElement(\"td\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" \", el.quickMoveStats.energyDelta);\n  });\n  moveCooldown = moves.map(function (el) {\n    return React.createElement(\"td\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, el.quickMoveStats.moveCooldown);\n  });\n  return React.createElement(\"div\", {\n    className: [classes.Table, \"table\"].join(\" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Quick Moves\"), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    key: Math.random(),\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Stats\"), data.map(function (el, index) {\n    return React.createElement(\"th\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, el, \" \");\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Base Power\"), basePower), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Duration\"), duration), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Energy Delta\"), energyDelta), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    key: Math.random(),\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Move Cooldown\"), moveCooldown))));\n};\n\nexport default table;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/pvp-app/src/UI/Table/Table.js"],"names":["React","classes","table","props","console","log","moveStats","moves","data","basePower","duration","energyDelta","moveCooldown","key","moveKeys","Object","keys","map","push","id","quickMoveStats","largest","Math","max","element","random","Largest","el","Table","join","textAlign","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classes from \"./Table.module.css\";\n\nconst table = props => {\n  console.log(\"inside props table\", props.moveStats);\n  console.log(props.moves);\n  console.log(\"the data is data\", props.moves);\n\n  let moves = [];\n  let data = [];\n  let basePower = [];\n  let duration = [];\n  let energyDelta = [];\n  let moveCooldown = [];\n\n  for (let key in props.moveStats) {\n    console.log(key);\n  }\n  for (let key in props.moves) {\n    const moveKeys = Object.keys(props.moveStats);\n    moveKeys.map(keys => {\n      if (keys === key) {\n        moves.push({ id: key, quickMoveStats: props.moveStats[key] });\n      }\n    });\n\n    data.push(key);\n  }\n\n  console.log(\"the data is \", moves);\n  let largest = Math.max(\n    ...moves.map(element => element.quickMoveStats.basePower)\n  );\n  basePower = moves.map(element => {\n    console.log(largest);\n    // const largest = Math.max(element.quickMoveStats.basePower);\n\n    if (largest === element.quickMoveStats.basePower) {\n      return (\n        <td key={Math.random()} className={classes.Largest}>\n          {element.quickMoveStats.basePower}\n        </td>\n      );\n    } else {\n      return <td key={Math.random()}>{element.quickMoveStats.basePower}</td>;\n    }\n  });\n\n  largest = Math.max(...moves.map(element => element.quickMoveStats.duration));\n  duration = moves.map(el => {\n    if (largest === element.quickMoveStats.basePower) {\n      return (\n        <td key={Math.random()} className={classes.Largest}>\n          {element.quickMoveStats.duration}\n        </td>\n      );\n    } \n    console.log(\"printing el now\", el.quickMoveStats);\n    return <td key={Math.random()}>{el.quickMoveStats.duration}</td>;\n  });\n\n  energyDelta = moves.map(el => (\n    <td key={Math.random()}> {el.quickMoveStats.energyDelta}</td>\n  ));\n  moveCooldown = moves.map(el => (\n    <td key={Math.random()}>{el.quickMoveStats.moveCooldown}</td>\n  ));\n\n  return (\n    <div className={[classes.Table, \"table\"].join(\" \")}>\n      <table>\n        <thead>\n          <p>Quick Moves</p>\n          <tr>\n            <th key={Math.random()} style={{ textAlign: \"left\" }}>\n              Stats\n            </th>\n            {data.map((el, index) => {\n              return <th key={Math.random()}>{el} </th>;\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td key={Math.random()} style={{ textAlign: \"left\" }}>\n              Base Power\n            </td>\n            {basePower}\n          </tr>\n          <tr>\n            <td key={Math.random()} style={{ textAlign: \"left\" }}>\n              Duration\n            </td>\n            {duration}\n          </tr>\n          <tr>\n            <td key={Math.random()} style={{ textAlign: \"left\" }}>\n              Energy Delta\n            </td>\n            {energyDelta}\n          </tr>\n          <tr>\n            <td key={Math.random()} style={{ textAlign: \"left\" }}>\n              Move Cooldown\n            </td>\n            {moveCooldown}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default table;\n"]},"metadata":{},"sourceType":"module"}