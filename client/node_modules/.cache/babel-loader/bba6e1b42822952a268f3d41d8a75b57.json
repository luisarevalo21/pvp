{"ast":null,"code":"import _defineProperty from \"/Users/luise.arevalo/Desktop/React/pvp-app/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/luise.arevalo/Desktop/React/pvp-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/luise.arevalo/Desktop/React/pvp-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/luise.arevalo/Desktop/React/pvp-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/luise.arevalo/Desktop/React/pvp-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/luise.arevalo/Desktop/React/pvp-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/luise.arevalo/Desktop/React/pvp-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/luise.arevalo/Desktop/React/pvp-app/client/src/components/FormPage/FormPage.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./FormPage.module.css\";\nimport Input from \"../UI/Input/Input\";\n{}\n/* <label for=\"exampleInputEmail1\">Pokemon name</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        aria-describedby=\"emailHelp\"\n        placeholder=\"Enter Pokemon Name\"\n      />\n*/\n// handleExtraQuickMove = () => {};\n\nvar FormPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormPage, _Component);\n\n  function FormPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      // newPokemon: {\n      //   pokemonName: null\n      // },\n      \"Quick Move\": {\n        name: {\n          value: \"\",\n          label: \"Quick Move Name\",\n          inputType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Enter Quick Move Name\"\n          }\n        },\n        basePower: {\n          value: \"\",\n          inputType: \"input\",\n          label: \"Base Power\",\n          elementConfig: {\n            type: \"number\",\n            placeholder: \"0\"\n          }\n        },\n        duration: {\n          value: \"\",\n          inputType: \"input\",\n          label: \"Duration\",\n          elementConfig: {\n            type: \"number\",\n            placeholder: \"0\"\n          }\n        },\n        energyGained: {\n          value: \"\",\n          inputType: \"input\",\n          label: \"Energy Gained\",\n          elementConfig: {\n            type: \"number\",\n            placeholder: \"0\"\n          }\n        },\n        coolDown: {\n          value: \"\",\n          inputType: \"input\",\n          label: \"Cool Down\",\n          elementConfig: {\n            type: \"number\",\n            placeholder: \"0\"\n          }\n        },\n        damagePerDuration: {\n          value: \"\",\n          inputType: \"input\",\n          label: \"Damage Per Duration\",\n          elementConfig: {\n            type: \"number\",\n            placeholder: \"0\"\n          }\n        },\n        energyPerDuration: {\n          value: \"\",\n          inputType: \"input\",\n          label: \"Energy Per Duration\",\n          elementConfig: {\n            type: \"number\",\n            placeholder: \"0\"\n          }\n        }\n      },\n      \"Charge Move\": {\n        name: {\n          value: \"\",\n          label: \"Charge Move Name\",\n          inputType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Enter Charge Move Name\"\n          }\n        },\n        basePower: {\n          value: \"\",\n          inputType: \"input\",\n          label: \"Base Power\",\n          elementConfig: {\n            type: \"number\",\n            placeholder: \"0\"\n          }\n        },\n        chargeEnergy: {\n          value: \"\",\n          label: \"Charge Energy\",\n          inputType: \"input\",\n          elementConfig: {\n            type: \"number\",\n            placeholder: \"0\"\n          }\n        },\n        damagePerEnergy: {\n          value: \"\",\n          label: \"Damage Per Energy\",\n          inputType: \"input\",\n          elementConfig: {\n            type: \"number\",\n            placeholder: \"0\"\n          }\n        }\n      }\n    };\n\n    _this.handleChange = function (event, key, value) {\n      console.log(\"the key is\", value);\n      var copyState = null;\n      var updatedElementState = null;\n\n      switch (value) {\n        case \"Charge Move\":\n          copyState = _objectSpread({}, _this.state[\"Charge Move\"]);\n          console.log(\"the copy state is \", copyState);\n          updatedElementState = _objectSpread({}, copyState[key]);\n          console.log(\"THE UPDATE ELEEMTN STATE IS\", updatedElementState);\n          updatedElementState.value = event.target.value;\n          copyState[key] = updatedElementState;\n\n          _this.setState(_defineProperty({}, \"Charge Move\", copyState));\n\n          break;\n\n        case \"Quick Move\":\n          copyState = _objectSpread({}, _this.state[\"Quick Move\"]);\n          console.log(\"the copy state is \", copyState);\n          updatedElementState = _objectSpread({}, copyState[key]);\n          console.log(\"THE UPDATE ELEEMTN STATE IS\", updatedElementState);\n          updatedElementState.value = event.target.value;\n          copyState[key] = updatedElementState;\n\n          _this.setState(_defineProperty({}, \"Quick Move\", copyState));\n\n          break;\n      } // if (value === \"Charge Move\") {\n      // case \"Quick Move\":\n      //   copyState = { ...this.state[\"Quick Move\"] };\n      //   updatedElementState = { ...copyState[key] };\n      //   updatedElementState.value = event.target.value;\n      //   copyState[key] = updatedElementState;\n      //   this.setState({ newChargeMove: copyState });\n      // break;\n      // if (value === \"Quick Move\") {\n      // }\n\n    };\n\n    _this.handleSubmit = function (event, value) {\n      event.preventDefault();\n      var copyObject = _this.state[value];\n      console.log(\"new charge move is\", copyObject);\n\n      switch (value) {\n        case \"Charge Move\":\n          fetch( // `https://pvp-move-analysis.herokuapp.com/chargemoves/add?chargeMoveName=${\n          \"http://localhost:3036/chargemoves/add?chargeMoveName=\".concat(copyObject.name.value, \"&basePower=\").concat(copyObject.basePower.value, \"&energy=\").concat(copyObject.chargeEnergy.value, \"&damagePerEnergy=\").concat(copyObject.damagePerEnergy.value)).then(function (response) {\n            console.log(\"the response is\", response);\n          }).then(function (response) {\n            return _this.props.history.push(\"/\");\n          }).catch(function (err) {\n            console.log(err);\n          });\n          break;\n\n        case \"Quick Move\":\n          fetch(\"http://localhost:3036/quickmoves/add?quickMoveName=\".concat(copyObject.name.value, \"&basePower=\").concat(copyObject.basePower.value, \"&energy=\").concat(copyObject.chargeEnergy.value, \"&damagePerEnergy=\").concat(copyObject.damagePerEnergy.value)).then(function (response) {\n            console.log(\"the response is\", response);\n          }).then(function (response) {\n            return _this.props.history.push(\"/\");\n          }).catch(function (err) {\n            console.log(err);\n          });\n          break;\n          break;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(FormPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"the option is \", this.props.selectedOption);\n      var s = this.props.selectedOption.value;\n      console.log(\"s is\", this.state[s]);\n      var array = [];\n\n      for (var key in this.state[s]) {\n        array.push({\n          id: key,\n          config: this.state[s][key]\n        });\n      }\n\n      console.log(\"the array is \", array);\n      var form = null;\n      console.log(\"inside the switch\");\n\n      switch (this.props.selectedOption.value) {\n        // case \"Pokemon\":\n        //   form = (\n        //     <form className={classes.FormPage}>\n        //       <div className=\"form-group\">\n        //         <Input\n        //           inputType=\"pokemon\"\n        //           label=\"Enter Pokemon Name\"\n        //           placeholder=\"Enter Pokemon Name\"\n        //           className=\"form-control\"\n        //           change={event => this.handleChange(event)}\n        //         />\n        //       </div>\n        //       <div className=\"form-group\" style={{ border: \"white solid 1px\" }}>\n        //         <Input\n        //           inputType=\"pokemon\"\n        //           label=\"Enter Quick Move Name\"\n        //           placeholder=\"Enter Quick Move\"\n        //           className=\"form-control\"\n        //         />\n        //         <Input inputType=\"quickMoveData\" className=\"form-control\" />\n        //       </div>\n        //       <div className=\"form-group\" style={{ border: \"white solid 1px\" }}>\n        //         <Input\n        //           inputType=\"pokemon\"\n        //           label=\"Enter Quick Move Name\"\n        //           placeholder=\"Enter Quick Move\"\n        //           className=\"form-control\"\n        //         />\n        //         <Input inputType=\"quickMoveData\" className=\"form-control\" />\n        //       </div>\n        //       {/* <button onClick={this.handleExtraQuickMove}>Add a quick move</button> */}\n        //       <div className=\"form-group\" style={{ border: \"white solid 1px\" }}>\n        //         <Input\n        //           inputType=\"pokemon\"\n        //           label=\"Enter Charge Move Name\"\n        //           placeholder=\"Enter charge move name\"\n        //           className=\"form-control\"\n        //         />\n        //         <Input inputType=\"chargeMoveData\" className=\"form-control\" />\n        //       </div>\n        //       <div className=\"form-group\" style={{ border: \"white solid 1px\" }}>\n        //         <Input\n        //           inputType=\"pokemon\"\n        //           label=\"Enter Charge Move Name\"\n        //           placeholder=\"Enter charge move name\"\n        //           className=\"form-control\"\n        //         />\n        //         <Input inputType=\"chargeMoveData\" className=\"form-control\" />\n        //       </div>\n        //       <div className=\"form-group\" style={{ border: \"white solid 1px\" }}>\n        //         <Input\n        //           inputType=\"pokemon\"\n        //           label=\"Enter Charge Move Name\"\n        //           placeholder=\"Enter charge move name\"\n        //           className=\"form-control\"\n        //           changed={event => this.handleChange(event)}\n        //         />\n        //         <Input inputType=\"chargeMoveData\" className=\"form-control\" />\n        //       </div>\n        //     </form>\n        //   );\n        //   break;\n        case \"Quick Move\":\n          form = React.createElement(\"form\", {\n            className: classes.FormPage,\n            onSubmit: function onSubmit(event) {\n              return _this2.handleSubmit(event, _this2.props.selectedOption.value);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 292\n            },\n            __self: this\n          }, array.map(function (element) {\n            return React.createElement(Input, {\n              key: element.id,\n              inputType: element.config.inputType,\n              label: element.config.label,\n              value: element.config.value,\n              elementConfig: element.config.elementConfig,\n              changed: function changed(event) {\n                return _this2.handleChange(event, element.id, _this2.props.selectedOption.value);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 308\n              },\n              __self: this\n            });\n          }), React.createElement(\"button\", {\n            className: \"btn btn-primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 323\n            },\n            __self: this\n          }, \"Submit\"));\n          break;\n\n        case \"Charge Move\":\n          form = React.createElement(\"form\", {\n            className: classes.FormPage,\n            onSubmit: function onSubmit(event) {\n              return _this2.handleSubmit(event, _this2.props.selectedOption.value);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 329\n            },\n            __self: this\n          }, array.map(function (element) {\n            return React.createElement(Input, {\n              key: element.id,\n              inputType: element.config.inputType,\n              label: element.config.label,\n              value: element.config.value,\n              elementConfig: element.config.elementConfig,\n              changed: function changed(event) {\n                return _this2.handleChange(event, element.id, _this2.props.selectedOption.value);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 336\n              },\n              __self: this\n            });\n          }), React.createElement(\"button\", {\n            className: \"btn btn-primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 351\n            },\n            __self: this\n          }, \"Submit\")); // form = (\n          //   <form className={classes.FormPage}>\n          //     <div className=\"form-group\" style={{ border: \"white solid 1px\" }}>\n          //       <Input\n          //         inputType=\"pokemon\"\n          //         label=\"Enter Charge Move Name\"\n          //         placeholder=\"Enter charge move name\"\n          //         className=\"form-control\"\n          //       />\n          //       <Input\n          //         inputType=\"chargeMoveData\"\n          //         className=\"form-control\"\n          //         change={this.handleChange}\n          //       />\n          //     </div>\n          //   </form>\n          // );\n\n          break;\n\n        default:\n          form = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 375\n            },\n            __self: this\n          }, \"hello world\");\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.Input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, form);\n    } // {\n    //   /* <div className=\"container\" style={{ border: \"2px solid red\" }}>\n    //       <div className=\"row\">\n    //         <div class=\"col-sm\">\n    //           Base Power <input placeholder=\"0\" type=\"number\" step=\"0.5\" />\n    //         </div>\n    //         <div class=\"col-sm\">\n    //           Turn <input placeholder=\"0\" type=\"number\" step=\"0.5\" />\n    //         </div>\n    //         <div class=\"col-sm\">\n    //           Energy Delta\n    //           <input placeholder=\"0\" type=\"number\" step=\"0.5\" />\n    //         </div>\n    //       </div>\n    //       <br />\n    //       <div className=\"row\">\n    //         <div class=\"col-md\">\n    //           Energy Per Turn <input placeholder=\"0\" type=\"number\" step=\"0.5\" />\n    //         </div>\n    //         <div class=\"col-md\">\n    //           Damage Per Duration{\" \"}\n    //           <input placeholder=\"0\" type=\"number\" step=\"0.5\" />\n    //         </div>\n    //       </div> */\n    // }\n    // {\n    //   /* <label>Turn</label>\n    //         <input placeholder=\"text\" />\n    //         <label>Energy Delta </label>\n    //         <input placeholder=\"Turn\" />\n    //       </div> */\n    // }\n    // {\n    //   /* <div className=\"row\">\n    //         <label>Energy Per Turn </label>\n    //         <input placeholder=\"Turn\" />\n    //         <label>Energy Per Turn </label>\n    //         <input placeholder=\"Turn\" />\n    //         <label>Energy Per Turn </label>\n    //         <input placeholder=\"Turn\" />\n    //       </div> */\n    // }\n    // {\n    //   /* </div> */\n    // }\n\n  }]);\n\n  return FormPage;\n}(Component);\n\nexport default FormPage;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/pvp-app/client/src/components/FormPage/FormPage.js"],"names":["React","Component","classes","Input","FormPage","state","name","value","label","inputType","elementConfig","type","placeholder","basePower","duration","energyGained","coolDown","damagePerDuration","energyPerDuration","chargeEnergy","damagePerEnergy","handleChange","event","key","console","log","copyState","updatedElementState","target","setState","handleSubmit","preventDefault","copyObject","fetch","then","response","props","history","push","catch","err","selectedOption","s","array","id","config","form","map","element"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport classes from \"./FormPage.module.css\";\nimport Input from \"../UI/Input/Input\";\n{\n  /* <label for=\"exampleInputEmail1\">Pokemon name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          aria-describedby=\"emailHelp\"\n          placeholder=\"Enter Pokemon Name\"\n        />\n  */\n}\n// handleExtraQuickMove = () => {};\nclass FormPage extends Component {\n  state = {\n    // newPokemon: {\n    //   pokemonName: null\n    // },\n    \"Quick Move\": {\n      name: {\n        value: \"\",\n        label: \"Quick Move Name\",\n        inputType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Enter Quick Move Name\"\n        }\n      },\n      basePower: {\n        value: \"\",\n        inputType: \"input\",\n        label: \"Base Power\",\n        elementConfig: {\n          type: \"number\",\n          placeholder: \"0\"\n        }\n      },\n      duration: {\n        value: \"\",\n        inputType: \"input\",\n        label: \"Duration\",\n        elementConfig: {\n          type: \"number\",\n          placeholder: \"0\"\n        }\n      },\n      energyGained: {\n        value: \"\",\n        inputType: \"input\",\n        label: \"Energy Gained\",\n        elementConfig: {\n          type: \"number\",\n          placeholder: \"0\"\n        }\n      },\n      coolDown: {\n        value: \"\",\n        inputType: \"input\",\n        label: \"Cool Down\",\n        elementConfig: {\n          type: \"number\",\n          placeholder: \"0\"\n        }\n      },\n      damagePerDuration: {\n        value: \"\",\n        inputType: \"input\",\n        label: \"Damage Per Duration\",\n        elementConfig: {\n          type: \"number\",\n          placeholder: \"0\"\n        }\n      },\n      energyPerDuration: {\n        value: \"\",\n        inputType: \"input\",\n        label: \"Energy Per Duration\",\n        elementConfig: {\n          type: \"number\",\n          placeholder: \"0\"\n        }\n      }\n    },\n    \"Charge Move\": {\n      name: {\n        value: \"\",\n        label: \"Charge Move Name\",\n        inputType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Enter Charge Move Name\"\n        }\n      },\n      basePower: {\n        value: \"\",\n        inputType: \"input\",\n        label: \"Base Power\",\n        elementConfig: {\n          type: \"number\",\n          placeholder: \"0\"\n        }\n      },\n      chargeEnergy: {\n        value: \"\",\n        label: \"Charge Energy\",\n        inputType: \"input\",\n        elementConfig: {\n          type: \"number\",\n          placeholder: \"0\"\n        }\n      },\n      damagePerEnergy: {\n        value: \"\",\n        label: \"Damage Per Energy\",\n        inputType: \"input\",\n        elementConfig: {\n          type: \"number\",\n          placeholder: \"0\"\n        }\n      }\n    }\n  };\n\n  //submit charge moves only for now\n  //figure out the id of which input was seelcted\n  //like the contact data example\n\n  handleChange = (event, key, value) => {\n    console.log(\"the key is\", value);\n    let copyState = null;\n    let updatedElementState = null;\n\n    switch (value) {\n      case \"Charge Move\":\n        copyState = { ...this.state[\"Charge Move\"] };\n        console.log(\"the copy state is \", copyState);\n        updatedElementState = { ...copyState[key] };\n        console.log(\"THE UPDATE ELEEMTN STATE IS\", updatedElementState);\n        updatedElementState.value = event.target.value;\n        copyState[key] = updatedElementState;\n        this.setState({ [\"Charge Move\"]: copyState });\n        break;\n\n      case \"Quick Move\":\n        copyState = { ...this.state[\"Quick Move\"] };\n        console.log(\"the copy state is \", copyState);\n        updatedElementState = { ...copyState[key] };\n        console.log(\"THE UPDATE ELEEMTN STATE IS\", updatedElementState);\n        updatedElementState.value = event.target.value;\n        copyState[key] = updatedElementState;\n        this.setState({ [\"Quick Move\"]: copyState });\n        break;\n    }\n    // if (value === \"Charge Move\") {\n\n    // case \"Quick Move\":\n    //   copyState = { ...this.state[\"Quick Move\"] };\n    //   updatedElementState = { ...copyState[key] };\n    //   updatedElementState.value = event.target.value;\n    //   copyState[key] = updatedElementState;\n    //   this.setState({ newChargeMove: copyState });\n\n    // break;\n\n    // if (value === \"Quick Move\") {\n\n    // }\n  };\n  handleSubmit = (event, value) => {\n    event.preventDefault();\n    const copyObject = this.state[value];\n    console.log(\"new charge move is\", copyObject);\n\n    switch (value) {\n      case \"Charge Move\":\n        fetch(\n          // `https://pvp-move-analysis.herokuapp.com/chargemoves/add?chargeMoveName=${\n\n          `http://localhost:3036/chargemoves/add?chargeMoveName=${\n            copyObject.name.value\n          }&basePower=${copyObject.basePower.value}&energy=${\n            copyObject.chargeEnergy.value\n          }&damagePerEnergy=${copyObject.damagePerEnergy.value}`\n        )\n          .then(response => {\n            console.log(\"the response is\", response);\n          })\n          .then(response => this.props.history.push(\"/\"))\n          .catch(err => {\n            console.log(err);\n          });\n        break;\n      case \"Quick Move\":\n        fetch(\n          `http://localhost:3036/quickmoves/add?quickMoveName=${\n            copyObject.name.value\n          }&basePower=${copyObject.basePower.value}&energy=${\n            copyObject.chargeEnergy.value\n          }&damagePerEnergy=${copyObject.damagePerEnergy.value}`\n        )\n          .then(response => {\n            console.log(\"the response is\", response);\n          })\n          .then(response => this.props.history.push(\"/\"))\n          .catch(err => {\n            console.log(err);\n          });\n        break;\n        break;\n    }\n  };\n  render() {\n    console.log(\"the option is \", this.props.selectedOption);\n    const s = this.props.selectedOption.value;\n    console.log(\"s is\", this.state[s]);\n    const array = [];\n\n    for (let key in this.state[s]) {\n      array.push({ id: key, config: this.state[s][key] });\n    }\n    console.log(\"the array is \", array);\n    let form = null;\n    console.log(\"inside the switch\");\n    switch (this.props.selectedOption.value) {\n      // case \"Pokemon\":\n      //   form = (\n      //     <form className={classes.FormPage}>\n      //       <div className=\"form-group\">\n      //         <Input\n      //           inputType=\"pokemon\"\n      //           label=\"Enter Pokemon Name\"\n      //           placeholder=\"Enter Pokemon Name\"\n      //           className=\"form-control\"\n      //           change={event => this.handleChange(event)}\n      //         />\n      //       </div>\n\n      //       <div className=\"form-group\" style={{ border: \"white solid 1px\" }}>\n      //         <Input\n      //           inputType=\"pokemon\"\n      //           label=\"Enter Quick Move Name\"\n      //           placeholder=\"Enter Quick Move\"\n      //           className=\"form-control\"\n      //         />\n      //         <Input inputType=\"quickMoveData\" className=\"form-control\" />\n      //       </div>\n      //       <div className=\"form-group\" style={{ border: \"white solid 1px\" }}>\n      //         <Input\n      //           inputType=\"pokemon\"\n      //           label=\"Enter Quick Move Name\"\n      //           placeholder=\"Enter Quick Move\"\n      //           className=\"form-control\"\n      //         />\n      //         <Input inputType=\"quickMoveData\" className=\"form-control\" />\n      //       </div>\n\n      //       {/* <button onClick={this.handleExtraQuickMove}>Add a quick move</button> */}\n      //       <div className=\"form-group\" style={{ border: \"white solid 1px\" }}>\n      //         <Input\n      //           inputType=\"pokemon\"\n      //           label=\"Enter Charge Move Name\"\n      //           placeholder=\"Enter charge move name\"\n      //           className=\"form-control\"\n      //         />\n      //         <Input inputType=\"chargeMoveData\" className=\"form-control\" />\n      //       </div>\n      //       <div className=\"form-group\" style={{ border: \"white solid 1px\" }}>\n      //         <Input\n      //           inputType=\"pokemon\"\n      //           label=\"Enter Charge Move Name\"\n      //           placeholder=\"Enter charge move name\"\n      //           className=\"form-control\"\n      //         />\n      //         <Input inputType=\"chargeMoveData\" className=\"form-control\" />\n      //       </div>\n      //       <div className=\"form-group\" style={{ border: \"white solid 1px\" }}>\n      //         <Input\n      //           inputType=\"pokemon\"\n      //           label=\"Enter Charge Move Name\"\n      //           placeholder=\"Enter charge move name\"\n      //           className=\"form-control\"\n      //           changed={event => this.handleChange(event)}\n      //         />\n      //         <Input inputType=\"chargeMoveData\" className=\"form-control\" />\n      //       </div>\n      //     </form>\n      //   );\n      //   break;\n      case \"Quick Move\":\n        form = (\n          <form\n            className={classes.FormPage}\n            onSubmit={event =>\n              this.handleSubmit(event, this.props.selectedOption.value)\n            }\n          >\n            {/* <div className=\"form-group\" style={{ border: \"white solid 1px\" }}>\n              <Input\n                inputType=\"pokemon\"\n                label=\"Enter Quick Move Name\"\n                placeholder=\"Enter Quick Move\"\n                className=\"form-control\"\n              />\n              <Input inputType=\"quickMoveData\" className=\"form-control\" />\n            </div> */}\n            {array.map(element => (\n              <Input\n                key={element.id}\n                inputType={element.config.inputType}\n                label={element.config.label}\n                value={element.config.value}\n                elementConfig={element.config.elementConfig}\n                changed={event =>\n                  this.handleChange(\n                    event,\n                    element.id,\n                    this.props.selectedOption.value\n                  )\n                }\n              />\n            ))}\n            <button className=\"btn btn-primary\">Submit</button>\n          </form>\n        );\n        break;\n      case \"Charge Move\":\n        form = (\n          <form\n            className={classes.FormPage}\n            onSubmit={event =>\n              this.handleSubmit(event, this.props.selectedOption.value)\n            }\n          >\n            {array.map(element => (\n              <Input\n                key={element.id}\n                inputType={element.config.inputType}\n                label={element.config.label}\n                value={element.config.value}\n                elementConfig={element.config.elementConfig}\n                changed={event =>\n                  this.handleChange(\n                    event,\n                    element.id,\n                    this.props.selectedOption.value\n                  )\n                }\n              />\n            ))}\n            <button className=\"btn btn-primary\">Submit</button>\n          </form>\n        );\n\n        // form = (\n        //   <form className={classes.FormPage}>\n        //     <div className=\"form-group\" style={{ border: \"white solid 1px\" }}>\n        //       <Input\n        //         inputType=\"pokemon\"\n        //         label=\"Enter Charge Move Name\"\n        //         placeholder=\"Enter charge move name\"\n        //         className=\"form-control\"\n        //       />\n        //       <Input\n        //         inputType=\"chargeMoveData\"\n        //         className=\"form-control\"\n        //         change={this.handleChange}\n        //       />\n        //     </div>\n        //   </form>\n        // );\n        break;\n\n      default:\n        form = <div>hello world</div>;\n    }\n    return (\n      <div className={classes.Input}>\n        {/* <h1>Hello from form page</h1> */}\n        {form}\n      </div>\n    );\n  }\n\n  // {\n  //   /* <div className=\"container\" style={{ border: \"2px solid red\" }}>\n  //       <div className=\"row\">\n  //         <div class=\"col-sm\">\n  //           Base Power <input placeholder=\"0\" type=\"number\" step=\"0.5\" />\n  //         </div>\n  //         <div class=\"col-sm\">\n  //           Turn <input placeholder=\"0\" type=\"number\" step=\"0.5\" />\n  //         </div>\n  //         <div class=\"col-sm\">\n  //           Energy Delta\n  //           <input placeholder=\"0\" type=\"number\" step=\"0.5\" />\n  //         </div>\n  //       </div>\n  //       <br />\n  //       <div className=\"row\">\n  //         <div class=\"col-md\">\n  //           Energy Per Turn <input placeholder=\"0\" type=\"number\" step=\"0.5\" />\n  //         </div>\n  //         <div class=\"col-md\">\n  //           Damage Per Duration{\" \"}\n  //           <input placeholder=\"0\" type=\"number\" step=\"0.5\" />\n  //         </div>\n  //       </div> */\n  // }\n  // {\n  //   /* <label>Turn</label>\n  //         <input placeholder=\"text\" />\n\n  //         <label>Energy Delta </label>\n  //         <input placeholder=\"Turn\" />\n  //       </div> */\n  // }\n  // {\n  //   /* <div className=\"row\">\n  //         <label>Energy Per Turn </label>\n  //         <input placeholder=\"Turn\" />\n  //         <label>Energy Per Turn </label>\n  //         <input placeholder=\"Turn\" />\n  //         <label>Energy Per Turn </label>\n  //         <input placeholder=\"Turn\" />\n  //       </div> */\n  // }\n  // {\n  //   /* </div> */\n  // }\n}\n\nexport default FormPage;\n"]},"metadata":{},"sourceType":"module"}