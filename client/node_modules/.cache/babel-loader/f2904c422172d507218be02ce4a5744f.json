{"ast":null,"code":"import _objectSpread from \"/Users/luise.arevalo/Desktop/React/pvp-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/luise.arevalo/Desktop/React/pvp-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/luise.arevalo/Desktop/React/pvp-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/luise.arevalo/Desktop/React/pvp-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/luise.arevalo/Desktop/React/pvp-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/luise.arevalo/Desktop/React/pvp-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/luise.arevalo/Desktop/React/pvp-app/client/src/components/PokemonInformation/PokemonInformation.js\";\nimport React, { Component } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./PokemonInformation.module.css\";\nimport firebase from \"../../Firebase\";\nimport Spinner from \"../UI/Spinner/Spinner\"; // import * as firebase from \"firebase\";\n\nimport firestore from \"firebase/firestore\"; // import { resolve } from \"url\";\n// const config = {\n//   apiKey: \"AIzaSyAZ1XB1wOKxFjUOwVMzsotBQyQJQXpoiS4\",\n//   authDomain: \"pvp-application.firebaseapp.com\",\n//   databaseURL: \"https://pvp-application.firebaseio.com\",\n//   projectId: \"pvp-application\",\n//   storageBucket: \"pvp-application.appspot.com\",\n//   messagingSenderId: \"213303980815\",\n//   appId: \"1:213303980815:web:3aac863d6659bb9e\"\n// };\n// firebase.initializeApp(config);\n\nvar storage = firebase.storage().ref();\n\nvar PokemonInformation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PokemonInformation, _Component);\n\n  function PokemonInformation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PokemonInformation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PokemonInformation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selected: \"\",\n      pokemonName: \"\",\n      loading: false\n    };\n\n    _this.fetchImage = function () {\n      _this.setState({\n        loading: true\n      });\n\n      if (!_this.state.selected || _this.state.selected && _this.state.pokemonName !== _this.props.pokemonName) {\n        // console.log(\"this.props.pokemonName\", this.props.pokemonName);\n        var copy = _objectSpread({}, _this.state); // console.log(\"the copy is\", copy);\n\n\n        storage.child(\"\".concat(_this.props.pokemonName, \".png\")).getDownloadURL().then(function (url) {\n          copy.selected = url; // console.log(\"the copy is\", copy);\n\n          _this.setState({\n            selected: copy.selected,\n            pokemonName: _this.props.pokemonName,\n            loading: false\n          });\n        }).catch(function (error) {\n          // console.log(error);\n          storage.child(\"pokeball.png\").getDownloadURL().then(function (url) {\n            copy.selected = url;\n            console.log(\"the copy is\", copy);\n\n            _this.setState({\n              selected: copy.selected,\n              pokemonName: _this.props.pokemonName\n            });\n          });\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(PokemonInformation, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.fetchImage(); // if (\n      //   !this.state.selected ||\n      //   (this.state.selected && this.state.pokemonName !== this.props.pokemonName)\n      // ) {\n      //   console.log(\"this.props.pokemonName\", this.props.pokemonName);\n      //   const copy = { ...this.state };\n      //   console.log(\"the copy is\", copy);\n      //   storage\n      //     .child(`${this.props.pokemonName}.png`)\n      //     .getDownloadURL()\n      //     .then(url => {\n      //       copy.selected = url;\n      //       console.log(\"the copy is\", copy);\n      //       this.setState({\n      //         selected: copy.selected,\n      //         pokemonName: this.props.pokemonName\n      //       });\n      //     })\n      //     .catch(error => {\n      //       console.log(error);\n      //       this.setState({\n      //         selected: \"no image to display\",\n      //         pokemonName: this.props.pokemonName\n      //       });\n      //       // Handle any errors\n      //     });\n      // console.log(\"this.props.pokemonName\", this.props.pokemonName);\n      // const copy = { ...this.state };\n      // console.log(\"the copy is\", copy);\n      // storage\n      //   .child(`${this.props.pokemonName}.png`)\n      //   .getDownloadURL()\n      //   .then(url => {\n      //     copy.selected = url;\n      //     console.log(\"the copy is\", copy);\n      //     this.setState({ selected: copy.selected });\n      //   })\n      //   .catch(error => {\n      //     // Handle any errors\n      //   });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchImage();\n    }\n  }, {\n    key: \"render\",\n    // componentDidUpdate() {\n    //   const copy = { ...this.state };\n    //   console.log(\"the copy is\", copy);\n    //   storage\n    //     .child(`${copy.selected}.png`)\n    //     .getDownloadURL()\n    //     .then(url => {\n    //       copy.selected = url;\n    //       console.log(\"the copy is\", copy);\n    //       this.setState({ selected: copy.selected });\n    //     })\n    //     .catch(error => {\n    //       // Handle any errors\n    //     });\n    // }\n    // getImage(image) {}\n    // componentDidMount() {\n    //   let imageString = \"\";\n    //   storage\n    //     .child(`${Charizard}.png`)\n    //     .getDownloadURL()\n    //     .then(url => {\n    //       imageString = url;\n    //       this.setState({ image: imageString });\n    //     })\n    //     .catch(error => {\n    //       console.log(error);\n    //       // Handle any errors\n    //     });\n    // axios\n    //   .get(\"gs://pvp-application.appspot.com/Charizard.png\")\n    //   .then(response => {\n    //     console.log(\"response is\", response.data);\n    //   })\n    //   .catch(error => console.log(error));\n    value: function render() {\n      var imageLoading = React.createElement(\"img\", {\n        // style={{ width: \"14rem\" }}\n        className: classes.Image,\n        src: this.state.selected,\n        alt: \"Pokemon Image\",\n        width: \"50px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      });\n\n      if (this.state.loading) {\n        imageLoading = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        });\n      } //   const imageSrc = require(`../../Pokemon/${props.pokemonName}.png`);\n      //   imageSrc.onLoad();\n\n\n      return React.createElement(\"div\", {\n        className: classes.PokemonInformation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        style: {\n          backgroundColor: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, this.props.pokemonName), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Dex #\", this.props.pokemonNumber))), imageLoading), React.createElement(\"div\", {\n        className: classes.Row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Type\",\n        body: this.props.typeOne + \" \" + this.props.typeTwo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card\",\n        style: {\n          backgroundColor: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Pokemon Max CP: \", this.props.maxCP), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Base HP: \", this.props.hp), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Base ATK: \", this.props.atk), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Base DEF: \", this.props.def)))));\n    }\n  }]);\n\n  return PokemonInformation;\n}(Component);\n\nexport default PokemonInformation;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/pvp-app/client/src/components/PokemonInformation/PokemonInformation.js"],"names":["React","Component","Card","classes","firebase","Spinner","firestore","storage","ref","PokemonInformation","state","selected","pokemonName","loading","fetchImage","setState","props","copy","child","getDownloadURL","then","url","catch","error","console","log","imageLoading","Image","backgroundColor","pokemonNumber","Row","typeOne","typeTwo","maxCP","hp","atk","def"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./PokemonInformation.module.css\";\nimport firebase from \"../../Firebase\";\nimport Spinner from \"../UI/Spinner/Spinner\";\n// import * as firebase from \"firebase\";\nimport firestore from \"firebase/firestore\";\n\n// import { resolve } from \"url\";\n\n// const config = {\n//   apiKey: \"AIzaSyAZ1XB1wOKxFjUOwVMzsotBQyQJQXpoiS4\",\n//   authDomain: \"pvp-application.firebaseapp.com\",\n//   databaseURL: \"https://pvp-application.firebaseio.com\",\n//   projectId: \"pvp-application\",\n//   storageBucket: \"pvp-application.appspot.com\",\n//   messagingSenderId: \"213303980815\",\n//   appId: \"1:213303980815:web:3aac863d6659bb9e\"\n// };\n// firebase.initializeApp(config);\nconst storage = firebase.storage().ref();\n\nclass PokemonInformation extends Component {\n  state = {\n    selected: \"\",\n    pokemonName: \"\",\n    loading: false\n  };\n\n  componentDidUpdate() {\n    this.fetchImage();\n    // if (\n    //   !this.state.selected ||\n    //   (this.state.selected && this.state.pokemonName !== this.props.pokemonName)\n    // ) {\n    //   console.log(\"this.props.pokemonName\", this.props.pokemonName);\n    //   const copy = { ...this.state };\n    //   console.log(\"the copy is\", copy);\n    //   storage\n    //     .child(`${this.props.pokemonName}.png`)\n    //     .getDownloadURL()\n    //     .then(url => {\n    //       copy.selected = url;\n    //       console.log(\"the copy is\", copy);\n\n    //       this.setState({\n    //         selected: copy.selected,\n    //         pokemonName: this.props.pokemonName\n    //       });\n    //     })\n    //     .catch(error => {\n    //       console.log(error);\n    //       this.setState({\n    //         selected: \"no image to display\",\n    //         pokemonName: this.props.pokemonName\n    //       });\n    //       // Handle any errors\n    //     });\n\n    // console.log(\"this.props.pokemonName\", this.props.pokemonName);\n    // const copy = { ...this.state };\n    // console.log(\"the copy is\", copy);\n    // storage\n    //   .child(`${this.props.pokemonName}.png`)\n    //   .getDownloadURL()\n    //   .then(url => {\n    //     copy.selected = url;\n    //     console.log(\"the copy is\", copy);\n    //     this.setState({ selected: copy.selected });\n    //   })\n    //   .catch(error => {\n    //     // Handle any errors\n    //   });\n  }\n  componentDidMount() {\n    this.fetchImage();\n  }\n\n  fetchImage = () => {\n    this.setState({ loading: true });\n    if (\n      !this.state.selected ||\n      (this.state.selected && this.state.pokemonName !== this.props.pokemonName)\n    ) {\n      // console.log(\"this.props.pokemonName\", this.props.pokemonName);\n      const copy = { ...this.state };\n      // console.log(\"the copy is\", copy);\n      storage\n        .child(`${this.props.pokemonName}.png`)\n        .getDownloadURL()\n        .then(url => {\n          copy.selected = url;\n          // console.log(\"the copy is\", copy);\n\n          this.setState({\n            selected: copy.selected,\n            pokemonName: this.props.pokemonName,\n            loading: false\n          });\n        })\n        .catch(error => {\n          // console.log(error);\n          storage\n            .child(`pokeball.png`)\n            .getDownloadURL()\n            .then(url => {\n              copy.selected = url;\n              console.log(\"the copy is\", copy);\n\n              this.setState({\n                selected: copy.selected,\n                pokemonName: this.props.pokemonName\n              });\n            });\n        });\n    }\n  };\n\n  // componentDidUpdate() {\n  //   const copy = { ...this.state };\n  //   console.log(\"the copy is\", copy);\n  //   storage\n  //     .child(`${copy.selected}.png`)\n  //     .getDownloadURL()\n  //     .then(url => {\n  //       copy.selected = url;\n  //       console.log(\"the copy is\", copy);\n\n  //       this.setState({ selected: copy.selected });\n  //     })\n  //     .catch(error => {\n  //       // Handle any errors\n  //     });\n  // }\n  // getImage(image) {}\n\n  // componentDidMount() {\n  //   let imageString = \"\";\n  //   storage\n  //     .child(`${Charizard}.png`)\n  //     .getDownloadURL()\n  //     .then(url => {\n  //       imageString = url;\n  //       this.setState({ image: imageString });\n  //     })\n  //     .catch(error => {\n  //       console.log(error);\n  //       // Handle any errors\n  //     });\n  // axios\n  //   .get(\"gs://pvp-application.appspot.com/Charizard.png\")\n  //   .then(response => {\n  //     console.log(\"response is\", response.data);\n  //   })\n  //   .catch(error => console.log(error));\n\n  render() {\n    let imageLoading = (\n      <img\n        // style={{ width: \"14rem\" }}\n        className={classes.Image}\n        src={this.state.selected}\n        alt=\"Pokemon Image\"\n        width=\"50px\"\n      />\n    );\n\n    if (this.state.loading) {\n      imageLoading = <Spinner />;\n    }\n    //   const imageSrc = require(`../../Pokemon/${props.pokemonName}.png`);\n    //   imageSrc.onLoad();\n    return (\n      <div className={classes.PokemonInformation}>\n        {/* <div class=\"row\">\n      <div class=\"col-sm\">One of three columns</div>\n      <div class=\"col-sm\">{props.pokemonName}</div>\n      <div class=\"col-sm\">Dex #{props.pokemonNumber}</div>\n    </div> */}\n        {/* \n    <div className={classes.Row}>\n      <img />\n      <p> text</p>\n      <p>{props.pokemonName}</p>\n      <p>Dex #{props.pokemonNumber}</p>\n    </div> */}\n\n        {/* <Card title={props.pokemonName} body= {props.pokemonNumber}/> */}\n        <div className=\"card\" style={{ backgroundColor: \"black\" }}>\n          <div className=\"card-body\">\n            <div className=\"card-text\">\n              <h3>{this.props.pokemonName}</h3>\n              <p>Dex #{this.props.pokemonNumber}</p>\n            </div>\n          </div>\n          {/* {checkImage(this.props.pokemonName)} */}\n          {imageLoading}\n          {/* <image src={this.state.image} /> */}\n\n          {/* <img\n            // style={{ width: \"14rem\" }}\n            className={classes.Image}\n            src={this.state.selected}\n            alt=\"Pokemon Image\"\n            width=\"50px\"\n          /> */}\n        </div>\n        {/* <div className={classes.Border}>\n      <p>Type</p>\n      <p>Weight</p>\n      <p>Height</p>\n    </div> */}\n        {/* <div class=\"card w-25\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Type</h5>\n        <p class=\"card-text\">here the typing will go </p>\n      </div>\n    </div>\n    <div class=\"card w-25\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Weight</h5>\n        <p class=\"card-text\">here the weight will go </p>\n      </div>\n    </div>\n    <div class=\"card w-25\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Height</h5>\n        <p class=\"card-text\">here the Height will go </p>\n      </div>\n    </div> */}\n\n        <div className={classes.Row}>\n          {/* <div className=\"row\"> */}\n          {/* <div style={{ flexDirection: \"row\", display: \"flex\" }}> */}\n\n          <Card\n            title=\"Type\"\n            body={this.props.typeOne + \" \" + this.props.typeTwo}\n          />\n          {/* <Card title=\"Weight\" body=\"this is where the weight goes\" />\n      <Card title=\"Height\" body=\"this is where the height goes\" /> */}\n          <div className=\"card\" style={{ backgroundColor: \"black\" }}>\n            <div className=\"card-header\">\n              Pokemon Max CP: {this.props.maxCP}\n            </div>\n\n            {/* <div className=\"card-title\">2000</div> */}\n            <div className=\"card-body\">\n              <div>Base HP: {this.props.hp}</div>\n              <div>Base ATK: {this.props.atk}</div>\n              <div>Base DEF: {this.props.def}</div>\n            </div>\n            {/* </div> */}\n          </div>\n        </div>\n\n        {/* <div className=\"col-sm-8\">\n    <div className=\"card\" style={{ backgroundColor: \"black\" }}>\n      <div className=\"card-header\">Pokemon Max CP: {props.maxCP}</div>\n\n      <div className=\"card-title\">2000</div>\n      <div className=\"card-body\">\n        <div>Base HP: {props.hp}</div>\n        <div>Base ATK: {props.atk}</div>\n        <div>Base DEF: {props.def}</div>\n      </div>\n    </div> */}\n        {/* </div> */}\n        {/* <div class=\"row\">\n      <div class=\"col-sm-4\"> */}\n        {/* <div class=\"row\">\n    //   <div class=\"col-sm-4\">\n    //     <div className=\"card\">\n    //       <div className=\"card-body\" />\n    //       <h5 className=\"card-title\">Height</h5>\n    //       <p className=\"card-text\">here the height will go</p>\n    //     </div>\n    //   </div>\n    // </div> */}\n      </div>\n    );\n  }\n}\n\nexport default PokemonInformation;\n"]},"metadata":{},"sourceType":"module"}